1
00:00:11,009 --> 00:00:13,628
good morning everyone my name is Jesse
bunch

2
00:00:14,519 --> 00:00:15,830
I'm an engineer on apples

3
00:00:15,083 --> 00:00:18,164
activity team in today I'm going to be
talking to you about improving the

4
00:00:19,064 --> 00:00:19,953
accessibility

5
00:00:20,529 --> 00:00:26,595
and usability a complex web applications
so my teammates and i have been hard at

6
00:00:27,189 --> 00:00:27,670
work

7
00:00:27,067 --> 00:00:30,104
improving the accessibility of my work
for I clout which is a sophisticated

8
00:00:31,004 --> 00:00:31,903
suite

9
00:00:31,939 --> 00:00:35,230
web applications designed to allow you
to create and edit

10
00:00:35,023 --> 00:00:38,066
your pages documents your number
spreadsheets

11
00:00:38,066 --> 00:00:42,073
and your keynote presentations all
across platforms in all from within your

12
00:00:43,036 --> 00:00:43,107
web browser

13
00:00:44,007 --> 00:00:48,076
well there's still more work to be done
in making them accessible

14
00:00:48,076 --> 00:00:52,076
we found that a lot of the issues that
we were fixing and I work for I clout

15
00:00:52,076 --> 00:00:55,139
are issues that are commonplace in web
applications today

16
00:00:56,039 --> 00:00:59,078
and so we thought it would be really
great to highlight for use in the

17
00:00:59,078 --> 00:01:01,167
specific accessibility challenges

18
00:01:01,869 --> 00:01:04,940
as well as provide practical solutions
to these challenges

19
00:01:04,094 --> 00:01:09,063
and give you tips on how you may be able
to avoid them altogether so today we're

20
00:01:09,909 --> 00:01:09,980
going

21
00:01:10,619 --> 00:01:14,810
to cover accessibility at a fundamental
level we're going to cover the latest

22
00:01:14,081 --> 00:01:16,890
research in statistics regarding users
with disabilities

23
00:01:17,619 --> 00:01:20,880
and they were going to cover web
accessibility standards

24
00:01:20,088 --> 00:01:23,102
as well as some of the tools you can use
to help meet those standards

25
00:01:24,002 --> 00:01:27,054
and finally we're going to apply
everything we've learned

26
00:01:27,054 --> 00:01:30,118
to help diagnose and fix some
accessibility issues in a text editing

27
00:01:31,018 --> 00:01:32,065
application that I've created

28
00:01:32,065 --> 00:01:37,092
now even show you something new
accessibility debugging tools

29
00:01:37,092 --> 00:01:42,167
found in the Safari note inspector
interest in Yosemite so let's get

30
00:01:43,067 --> 00:01:43,072
started

31
00:01:44,017 --> 00:01:47,094
this is the 1992 version the very first
website

32
00:01:47,094 --> 00:01:51,155
it's still on the Internet today it's
just the page for data and links

33
00:01:52,055 --> 00:01:56,089
they go out to other pages for data and
links and it was revolutionary in its

34
00:01:56,089 --> 00:01:56,155
time

35
00:01:57,055 --> 00:02:00,734
and while it was revolutionary it was
also very simple

36
00:02:01,229 --> 00:02:04,270
in fact the argument can be made that
this website

37
00:02:04,027 --> 00:02:08,059
was accessible by default after all it's
just text based

38
00:02:08,059 --> 00:02:12,065
content and rather trivial to
disseminate surely text-based content

39
00:02:12,065 --> 00:02:16,120
to screen reader but if you fast forward
to when applications today

40
00:02:17,002 --> 00:02:20,511
modern web applications sometimes use
completely custom controls

41
00:02:20,709 --> 00:02:24,150
they have real time content and data
communal the page

42
00:02:24,015 --> 00:02:28,070
they used a these charts and graphs and
most in this content was initially

43
00:02:28,007 --> 00:02:28,068
designed

44
00:02:29,031 --> 00:02:33,047
was only the mouse user in mind but what
if you don't prefer

45
00:02:33,047 --> 00:02:36,286
using a mouse what if you can't use a
mouse

46
00:02:36,709 --> 00:02:41,250
due to some dexterity issue in your
hands well in fact millions of people

47
00:02:41,025 --> 00:02:44,100
every day use accessible web
applications some love them

48
00:02:45,000 --> 00:02:49,053
with only a single switch using switch
control software this lady control an

49
00:02:49,053 --> 00:02:50,112
entire I less device

50
00:02:51,012 --> 00:02:54,077
as well as your assist accessible web
applications

51
00:02:54,077 --> 00:02:57,169
using only the single switch that's
mounted by her forehead absolutely

52
00:02:58,069 --> 00:02:58,728
incredible

53
00:02:59,349 --> 00:03:03,000
and accessibility is a broad field

54
00:03:03,000 --> 00:03:06,008
that means different things to different
people but in short

55
00:03:06,008 --> 00:03:09,069
accessibility is about supporting real
people with real needs

56
00:03:09,069 --> 00:03:13,103
whatever those needs maybe and sometimes
we do that by providing an alternate

57
00:03:14,003 --> 00:03:15,042
interaction model

58
00:03:15,069 --> 00:03:19,640
such as a keyboard or switch control
it's more appropriate given the user

59
00:03:19,064 --> 00:03:20,073
specific needs

60
00:03:20,073 --> 00:03:23,081
and as web engineers it is our most
basic duty

61
00:03:24,053 --> 00:03:27,762
to make sure that our web applications
work well with assistive technology

62
00:03:28,239 --> 00:03:32,230
that's true and we do that by handling
the right

63
00:03:32,023 --> 00:03:35,089
a JavaScript events by adding the right
mark up in our code

64
00:03:35,089 --> 00:03:40,090
but what if we took it a step further
what if we design our applications

65
00:03:40,009 --> 00:03:43,028
so thoughtfully that they would be
usable by everyone

66
00:03:44,009 --> 00:03:48,908
regardless of whether or not they had a
disability the term universal design

67
00:03:48,989 --> 00:03:52,000
deals with the specifically in the
quintessential example

68
00:03:52,099 --> 00:03:56,870
universal design is the curb cut is now
required by law

69
00:03:56,087 --> 00:04:00,087
and its crucial for someone who needs a
wheelchair for mobility

70
00:04:00,087 --> 00:04:04,119
but it is just as useful for someone who
is pushing a stroller down the street

71
00:04:05,019 --> 00:04:10,033
or movers moving you into your new
apartment another great example

72
00:04:10,033 --> 00:04:14,047
universal design is closed captioning
here we have a baseball game

73
00:04:14,047 --> 00:04:17,115
and the announcers talking about this
guy swing which looks beautiful by the

74
00:04:18,015 --> 00:04:19,022
way

75
00:04:19,022 --> 00:04:22,066
and we're using closed captioning to
provide a text based alternative for the

76
00:04:22,066 --> 00:04:24,072
audio track in this movie

77
00:04:24,072 --> 00:04:27,128
this is absolutely vital for someone who
is hearing impaired or death

78
00:04:28,028 --> 00:04:31,627
but it is just as useful in an airport
or doctor's office

79
00:04:31,879 --> 00:04:35,150
or somewhere else where sounds to be
regulated and therefore they may not

80
00:04:35,015 --> 00:04:35,068
have

81
00:04:35,068 --> 00:04:38,080
idea playing

82
00:04:38,008 --> 00:04:41,487
for web applications a great example a
universal design

83
00:04:42,279 --> 00:04:47,430
is for keyword access this is the idea
that your application should be usable

84
00:04:47,043 --> 00:04:50,952
using only the keyboard if we take a
look at the pages for I cloud user

85
00:04:51,339 --> 00:04:52,770
interface

86
00:04:52,077 --> 00:04:55,149
you'll see that when the user hits the
Tab key focus is gonna go

87
00:04:56,049 --> 00:04:59,378
to the button at the top of the page
this is in popup I'm

88
00:04:59,819 --> 00:05:02,847
and you know this because in the blue
outline that appeared over the butt

89
00:05:03,099 --> 00:05:06,153
and I've highlighted that with that box

90
00:05:06,639 --> 00:05:09,664
now keyboard users expect to be able to
you select the button

91
00:05:09,889 --> 00:05:13,907
using the space bar sometimes the Return
key so if the user hits the spacebar to

92
00:05:14,069 --> 00:05:15,091
activate this button

93
00:05:15,289 --> 00:05:19,322
you see that the menu is activated just
as if they had clicked it was a mouse

94
00:05:19,619 --> 00:05:23,180
then we can navigate the menu with the
rockies and go down to the seventy-five

95
00:05:23,018 --> 00:05:26,105
percent zoom level

96
00:05:27,005 --> 00:05:30,005
and we get the seventy five persons in
level a keyword user expect to be able

97
00:05:30,005 --> 00:05:33,024
to press the spacebar to activate and
select that menu item

98
00:05:33,069 --> 00:05:36,080
and so when they do that you see that
the menu goes away just as if they had

99
00:05:36,008 --> 00:05:37,377
clicked that with the mouse

100
00:05:37,449 --> 00:05:40,900
and with the zoom level the page
obviously changes

101
00:05:40,009 --> 00:05:44,078
and then use notice: an important detail
that we set the keyboard focus back to

102
00:05:44,969 --> 00:05:46,610
the button to open the menu

103
00:05:46,061 --> 00:05:49,490
this more detail is very important for
keyboard users to be able to save the

104
00:05:50,039 --> 00:05:51,800
context where they were at

105
00:05:51,008 --> 00:05:55,077
prior some interactive element popping
up on screen

106
00:05:55,869 --> 00:05:58,885
in being able to interact with the user
interface a page %uh strike lot in this

107
00:05:59,029 --> 00:05:59,105
way

108
00:05:59,789 --> 00:06:02,855
is absolutely crucial for someone who
has a dexterity issue in their hands and

109
00:06:03,449 --> 00:06:05,467
therefore they cannot use a mouse

110
00:06:05,629 --> 00:06:09,647
but it is just as important for someone
who has a lot of document editing to do

111
00:06:09,809 --> 00:06:14,873
in perhaps a short amount of time and
they want to be as efficient as possible

112
00:06:15,449 --> 00:06:19,449
what we're mostly focused on the human
aspect accessibility

113
00:06:19,449 --> 00:06:22,511
is worth mentioning that applying the
principles universal design

114
00:06:23,069 --> 00:06:26,360
and making your web applications
accessible will make them easier to

115
00:06:26,036 --> 00:06:27,025
automate

116
00:06:27,349 --> 00:06:31,349
in automation has numerous benefits for
you and your organization

117
00:06:31,349 --> 00:06:34,446
it for more information about automation
and how it relates to accessibility

118
00:06:35,319 --> 00:06:41,335
I've included a link to previous years
talk at the into this presentation

119
00:06:41,479 --> 00:06:45,050
so as you saw from the previous examples
the reasons for making your web

120
00:06:45,005 --> 00:06:48,344
application accessible are not limited
to simply caring for those with

121
00:06:48,389 --> 00:06:49,395
disabilities

122
00:06:49,449 --> 00:06:53,330
rather all users can benefit from the
work that you do in this area

123
00:06:53,033 --> 00:06:56,302
but for the purposes of this talk in our
topic and whether aP's

124
00:06:56,599 --> 00:07:00,180
we're going to be focusing specifically
on users with visual impairments

125
00:07:00,018 --> 00:07:03,052
that may or may not be able to use our
applications without some sort of

126
00:07:03,052 --> 00:07:05,261
assistive technology such as a screen
reader

127
00:07:05,729 --> 00:07:09,826
or braille device in fact that user base
is no small figure

128
00:07:10,699 --> 00:07:13,704
$285 million people across the world

129
00:07:13,749 --> 00:07:17,800
are visually impaired worldwide such
thing such that they cannot read

130
00:07:17,008 --> 00:07:21,080
some or all the given content every
given web page

131
00:07:22,052 --> 00:07:26,351
now that $285 million people forty
million people across the world are

132
00:07:26,819 --> 00:07:28,270
completely blind

133
00:07:28,027 --> 00:07:31,032
and therefore require the use of a
screen reader braille device

134
00:07:31,077 --> 00:07:34,436
to be able to benefit from your web
application

135
00:07:35,129 --> 00:07:38,142
so for more than 40 million people
around the world

136
00:07:38,259 --> 00:07:41,580
accessibility is not just a nice to have
feature

137
00:07:41,058 --> 00:07:44,767
it is a vital part of their lives and
for some

138
00:07:45,289 --> 00:07:48,353
it is a prerequisite from being able to
benefit from your application

139
00:07:48,929 --> 00:07:54,968
or the hard work the UN your team to put
into it

140
00:07:55,319 --> 00:07:58,393
so now that I've hopefully sold you on
the idea of making your application

141
00:07:59,059 --> 00:08:00,074
accessible

142
00:08:00,209 --> 00:08:03,245
let's talk about some other web
standards that are out there to help you

143
00:08:03,569 --> 00:08:04,574
along the way

144
00:08:04,619 --> 00:08:09,270
and specifically I want to talk about
the Web Content Accessibility Guidelines

145
00:08:09,027 --> 00:08:12,066
abbreviated work act for short

146
00:08:12,309 --> 00:08:15,395
now the work at document is quite
lengthy but for the purposes of this

147
00:08:16,169 --> 00:08:19,222
talk we can boil it down to four basic
principles

148
00:08:19,699 --> 00:08:22,782
which are perceivable operable

149
00:08:23,529 --> 00:08:28,050
understandable and robust and we're
gonna go through the for these

150
00:08:28,005 --> 00:08:31,058
in more detail starting with perceivable

151
00:08:31,058 --> 00:08:34,119
receivable basically means do I know it
is there

152
00:08:35,019 --> 00:08:38,998
in this we're going back to the closed
captioning example in this

153
00:08:39,169 --> 00:08:42,940
example we have you know some text-based
content that is

154
00:08:42,094 --> 00:08:45,127
an alternative for the audio track and
in a movie

155
00:08:46,027 --> 00:08:50,033
in this is just one example in fact
having tech space descriptions for non

156
00:08:50,087 --> 00:08:51,134
textual content

157
00:08:52,034 --> 00:08:55,035
is one of the most common accessibility
issues on the web today

158
00:08:55,035 --> 00:08:58,092
specifically for web applications
because we like to use buttons with

159
00:08:58,092 --> 00:08:59,127
beautiful icons

160
00:09:00,027 --> 00:09:05,083
and we oftentimes forget to add the
labels for these buttons into the markup

161
00:09:05,083 --> 00:09:09,136
operable means can I use it

162
00:09:10,036 --> 00:09:13,041
this goes back to a4 key word access
example simply put

163
00:09:13,086 --> 00:09:16,092
if you can navigate to an element with
the mouse and perform some action on

164
00:09:17,046 --> 00:09:18,099
that element with the mouse

165
00:09:18,099 --> 00:09:21,110
you should be able to get to that
element and perform the very same action

166
00:09:22,001 --> 00:09:23,094
using a keyboard alone

167
00:09:24,003 --> 00:09:27,011
now this can be tricky at times
especially if you're using custom

168
00:09:27,011 --> 00:09:27,110
controls

169
00:09:28,001 --> 00:09:31,019
but we're going to discuss a common
approach in a demo later on

170
00:09:31,028 --> 00:09:35,095
you can take back in using your own web
applications

171
00:09:35,095 --> 00:09:38,100
understandable should be fairly obvious

172
00:09:39,000 --> 00:09:42,026
does your webs does your website's
content makes sense

173
00:09:42,026 --> 00:09:46,030
does it perform in predictable ways
example if this would be a segmented

174
00:09:46,066 --> 00:09:47,078
arco control

175
00:09:47,078 --> 00:09:51,137
such as the one found in the keynote for
I clout the end-user

176
00:09:52,037 --> 00:09:57,037
now this control might be perceived one
operable to a screen reader user

177
00:09:57,037 --> 00:10:00,133
but unless it's marked up correctly the
user when they land on this control

178
00:10:01,033 --> 00:10:06,035
might hear something like this

179
00:10:06,035 --> 00:10:11,070
standard why so voice over on the Mac
said standard

180
00:10:11,007 --> 00:10:15,074
wide that doesn't tell them all the
information they decided user sees

181
00:10:16,037 --> 00:10:19,101
in that there are two buttons on this
page they are mutually exclusive

182
00:10:20,001 --> 00:10:24,005
and one of them is selected instead a
better experience would be to mark up

183
00:10:24,041 --> 00:10:25,124
this element in such a way

184
00:10:26,024 --> 00:10:29,032
that the user hear something like this
instead

185
00:10:30,004 --> 00:10:35,015
standard selected tap 12 wine tapped
into

186
00:10:35,015 --> 00:10:39,031
so again voice-over said selected
standard selected tab

187
00:10:39,031 --> 00:10:42,047
one of two wide tab to have to

188
00:10:42,047 --> 00:10:44,129
which tells the user everything at the
site the user sees when they look at

189
00:10:45,029 --> 00:10:45,121
this control

190
00:10:46,021 --> 00:10:50,086
is a much better experience for
voiceover user

191
00:10:50,086 --> 00:10:53,129
now robust as a bit more complicated and
we can really divided up into two

192
00:10:54,029 --> 00:10:55,053
different parts

193
00:10:55,053 --> 00:10:58,138
the first part of your bust is simply
making sure that your market is semantic

194
00:10:59,038 --> 00:10:59,137
incorrect

195
00:11:00,037 --> 00:11:03,074
such that it is displayed correctly
across user agents

196
00:11:03,074 --> 00:11:06,172
and is more resilient to the changing
technology around it

197
00:11:07,072 --> 00:11:10,150
the second part iv: robust is having
alternatives for the presentation of

198
00:11:11,005 --> 00:11:12,030
your content

199
00:11:12,075 --> 00:11:15,152
so a good example of this would be i
clad in general but let's look at

200
00:11:16,052 --> 00:11:20,052
specifically pages for I clout if you're
editing a document pages

201
00:11:20,052 --> 00:11:24,120
in you discover a bug that prevents you
from being able to access your content

202
00:11:25,002 --> 00:11:28,009
you can simply open this document in
either the OS 10

203
00:11:28,027 --> 00:11:32,113
or the IRS applications in use the
built-in accessibility support their

204
00:11:33,013 --> 00:11:36,017
another great example having robust
content would be

205
00:11:36,017 --> 00:11:40,065
exporting data for some sort of feed
like RSS are at a

206
00:11:40,065 --> 00:11:44,066
in this allows the user to use any
number accessible applications to be

207
00:11:44,075 --> 00:11:46,099
able to consume your content

208
00:11:46,099 --> 00:11:50,132
and in other words no one bugger issues
she completely prevent users from being

209
00:11:51,032 --> 00:11:53,037
able to access your content

210
00:11:53,082 --> 00:11:56,179
not worth mentioning that having robust
content is not mutually exclusive with

211
00:11:57,079 --> 00:11:58,171
having accessible content

212
00:11:59,071 --> 00:12:02,104
they're meant to complement each other
and give your users options

213
00:12:03,004 --> 00:12:08,009
should they encounter issues

214
00:12:08,009 --> 00:12:11,015
so as we just saw your content should be
perceive a below

215
00:12:11,069 --> 00:12:15,146
operable understandable and robust now I
want to get a bit more tactical

216
00:12:16,046 --> 00:12:19,065
and talk about some other ways you
actually accomplish these things

217
00:12:19,065 --> 00:12:23,090
starting with semantic markup

218
00:12:23,009 --> 00:12:26,043
so using semantic markup is one of the
first things you can do to help improve

219
00:12:27,024 --> 00:12:29,028
your web applications accessibility

220
00:12:29,064 --> 00:12:32,077
here are two screenshots the very same
webpage

221
00:12:32,077 --> 00:12:35,133
the screenshot on the left was
implemented using only div tags for the

222
00:12:36,033 --> 00:12:38,076
headings that you see on the screen

223
00:12:38,076 --> 00:12:41,171
the screenshot on the right was
implemented using semantic h1 tags:

224
00:12:42,071 --> 00:12:45,080
for the headings that you see on the
screen now

225
00:12:45,008 --> 00:12:49,013
two-sided user these two web pages are
going to look and perform an identical

226
00:12:49,085 --> 00:12:49,092
ways

227
00:12:50,055 --> 00:12:53,057
in fact the site to users not going to
be able to know it all that they were

228
00:12:53,057 --> 00:12:53,155
implemented

229
00:12:54,055 --> 00:12:57,118
one way or the other but your user
assistive technology

230
00:12:58,018 --> 00:13:01,049
these two pages are going to appear into
going to perform in completely different

231
00:13:01,049 --> 00:13:02,051
ways

232
00:13:02,051 --> 00:13:07,117
in to find out why let's take a look at
the market behind the scenes

233
00:13:08,017 --> 00:13:12,062
as I said the image on the left was
implemented using only added tax in fact

234
00:13:12,062 --> 00:13:15,081
the style was actually in line in the
tag itself

235
00:13:15,081 --> 00:13:18,088
now and assistive technology is are
specifically a screen reader user

236
00:13:19,051 --> 00:13:22,106
is going to hear this when they land on
this heading

237
00:13:23,006 --> 00:13:27,061
all about which is so voice-over said
all about widgets

238
00:13:27,061 --> 00:13:30,125
and you could argue yeah so they got the
content that heading

239
00:13:31,025 --> 00:13:34,073
but there's really no semantic
information that is conveyed here

240
00:13:34,073 --> 00:13:37,130
were specially not conveying the same
information they decided user sees

241
00:13:38,003 --> 00:13:41,025
in that this is a heading in fact it's
one of the most prominent

242
00:13:41,052 --> 00:13:44,110
headings on the page so this is
obviously not the best experience for

243
00:13:45,001 --> 00:13:46,005
the user

244
00:13:46,005 --> 00:13:49,076
instead if we were to use semantic h1
tag

245
00:13:50,021 --> 00:13:54,095
the user using a screen reader will hear
this instead

246
00:13:54,095 --> 00:13:58,161
had a little one all about which is so
voice-over said heading level 1

247
00:13:59,061 --> 00:14:03,061
all about widgets that conveys way more
information to the user

248
00:14:03,061 --> 00:14:06,099
and is obviously exactly with the site
the user sees so this is a much better

249
00:14:06,099 --> 00:14:07,170
experience

250
00:14:08,007 --> 00:14:12,054
it's also worth noting that screeners
oftentimes allow a user to navigate the

251
00:14:13,017 --> 00:14:14,099
page heading by heading

252
00:14:14,099 --> 00:14:18,180
and so using a semantic h1 tag allows
them to quickly find their contact

253
00:14:19,008 --> 00:14:26,008
especially on long pages and so that's
also a better experience for user

254
00:14:27,036 --> 00:14:30,130
now next up is using standard controls
and using standard controls wherever

255
00:14:31,003 --> 00:14:33,061
possible will not only make the
experience better

256
00:14:33,088 --> 00:14:36,122
for users of assistive technology
because the controls will be more

257
00:14:37,022 --> 00:14:39,108
consistent with what they're used to in
their system

258
00:14:40,008 --> 00:14:43,040
but it also saves you a lot work in
making and usable

259
00:14:43,004 --> 00:14:47,083
and accessible say for instance you want
to create a custom slider

260
00:14:48,019 --> 00:14:52,040
misses the mark up that you might
actually years and with some CSS magic

261
00:14:52,004 --> 00:14:55,051
that might be the actual look at the
control

262
00:14:55,087 --> 00:14:58,125
now let's say you wanted to make this
control work with the mouse so

263
00:14:59,025 --> 00:15:04,025
you would have to handle several mouse
events in order to make that happen

264
00:15:04,025 --> 00:15:07,077
and mouse down to be able to start
tracking the mouse now to move to update

265
00:15:07,077 --> 00:15:08,120
a controlling ass and

266
00:15:09,002 --> 00:15:12,076
to finally commit that value back
tomorrow now let's say you want to make

267
00:15:12,094 --> 00:15:13,167
it work with the touch device

268
00:15:14,067 --> 00:15:17,120
so in that case you have to handle
similar methods

269
00:15:18,002 --> 00:15:21,091
except you have this added complexity
that a touch can be cancelled if you

270
00:15:22,009 --> 00:15:22,057
drag it

271
00:15:22,057 --> 00:15:25,069
of the screen or up to the browser
Chrome and so you have to account for

272
00:15:25,069 --> 00:15:26,108
that

273
00:15:27,008 --> 00:15:30,073
you can begin to understand or think
about the kinder state machine you're

274
00:15:30,073 --> 00:15:33,090
gonna need to be able to keep track of
this control

275
00:15:33,009 --> 00:15:35,100
now so that's the mouse and thats touch
devices but let's say you want to make

276
00:15:36,081 --> 00:15:38,083
this work with the keyboard as you
should

277
00:15:39,001 --> 00:15:43,066
so let's grow everything up and let's
implement our keyword methods

278
00:15:43,066 --> 00:15:46,160
we're gonna handle focus so that we can
updated visual style of the control

279
00:15:47,006 --> 00:15:50,032
when the when the control gains keyboard
focus to show the user that they can

280
00:15:50,086 --> 00:15:51,169
begin interacting with it

281
00:15:52,069 --> 00:15:55,074
then we have to handle blur so we can
remove that visual style one focus goes

282
00:15:56,019 --> 00:15:57,024
elsewhere

283
00:15:57,024 --> 00:16:00,107
and then we have to handle key down so
that we can respond to a Rockies

284
00:16:01,007 --> 00:16:05,030
home and page up page down all the
different key combinations

285
00:16:05,003 --> 00:16:08,024
that a user the keyboard would expect to
be able to modify the value that's

286
00:16:08,051 --> 00:16:09,094
lighter

287
00:16:09,094 --> 00:16:12,116
this is a lot of work and you should
avoid it wherever you can

288
00:16:13,016 --> 00:16:18,017
by using standard controls example here
would be using a native input range

289
00:16:18,017 --> 00:16:18,876
control

290
00:16:19,029 --> 00:16:23,450
giving a minimum and a maximum value as
well as the current value

291
00:16:23,045 --> 00:16:26,093
if you do this the browser is going to
handle everything for you from mouse

292
00:16:26,093 --> 00:16:28,252
events to touch events keyboard

293
00:16:29,089 --> 00:16:32,310
its gonna handle state tracking observer
notification

294
00:16:32,031 --> 00:16:35,087
and you're gonna get accessibility out
of the box see you literally have to do

295
00:16:35,087 --> 00:16:36,179
nothing else to make this control work

296
00:16:37,079 --> 00:16:40,143
if you just use a standard control but

297
00:16:41,043 --> 00:16:45,061
you and I both know that HTML controls
can be difficult to style

298
00:16:45,061 --> 00:16:48,130
I mean they're getting better but
they're still not quite there

299
00:16:49,003 --> 00:16:52,022
and so if you couple that fact with a

300
00:16:52,049 --> 00:16:55,648
really great designer who just handed
you a really beautiful visual spectra

301
00:16:56,089 --> 00:16:56,710
slider

302
00:16:56,071 --> 00:16:59,126
you're probably going to have to roll
your own and so let's go back to our

303
00:17:00,026 --> 00:17:02,077
custom slider control and talk about how
you can make it

304
00:17:02,077 --> 00:17:06,175
more accessible so this is the market
that we used to implement these

305
00:17:07,075 --> 00:17:08,534
JavaScript advance

306
00:17:09,209 --> 00:17:13,150
I'm but you'll be you may be surprised
to know that this control is absolutely

307
00:17:13,015 --> 00:17:16,534
an accessible for someone who is using a
screen reader braille device

308
00:17:16,669 --> 00:17:19,730
after all there's nothing in this market
that tells the user

309
00:17:19,073 --> 00:17:22,432
this is a slider at all much less its
current state

310
00:17:23,089 --> 00:17:26,163
with a minimum and maximum value as well
as a current value

311
00:17:26,829 --> 00:17:29,864
and what's worse is that hTML doesn't
really give us

312
00:17:30,179 --> 00:17:34,212
any ability to be able to to tell the
user this information

313
00:17:34,509 --> 00:17:38,690
so we need something else and that's
where aria comes in

314
00:17:38,069 --> 00:17:41,548
Aria stands for accessible rich Internet
applications

315
00:17:42,169 --> 00:17:45,840
and it was specifically designed to help
bridge this gap between

316
00:17:45,084 --> 00:17:49,161
HTML in assistive technology by defining
additional properties

317
00:17:50,061 --> 00:17:54,880
that allow us to describe what an
element is as well as its current state

318
00:17:55,429 --> 00:17:59,517
so going back to our custom slider Aria
allows us to give this div tag

319
00:18:00,309 --> 00:18:03,384
a role a slider now it's worth
mentioning that

320
00:18:04,059 --> 00:18:07,157
Aria defines over 50 different roles the
you can give an any

321
00:18:08,039 --> 00:18:11,570
in many different situations in your
markup but for this one we're going to

322
00:18:11,057 --> 00:18:11,149
use lighter

323
00:18:12,049 --> 00:18:16,058
and for any given role Aria also
specifies a list

324
00:18:16,499 --> 00:18:20,950
a properties and attributes that you can
use to describe what the control is as

325
00:18:20,095 --> 00:18:21,704
well as its current state

326
00:18:22,559 --> 00:18:26,490
so in the case in a slider we need to
tell the user about the minimum value in

327
00:18:26,049 --> 00:18:27,178
the maximum value

328
00:18:27,619 --> 00:18:31,635
using re-evaluate man and re-evaluate
backs respectively

329
00:18:31,779 --> 00:18:34,805
we also need to tell the user with the
current value is so we'll add

330
00:18:35,039 --> 00:18:37,045
re-evaluate now

331
00:18:37,639 --> 00:18:41,650
it's worth mentioning that what we had
to handle all the JavaScript immense

332
00:18:41,749 --> 00:18:42,350
manually

333
00:18:42,035 --> 00:18:45,494
we also have to handle updating
re-evaluate now

334
00:18:45,809 --> 00:18:47,903
when the sliders value changes so that
yet another thing that you have to keep

335
00:18:48,749 --> 00:18:48,830
track I have

336
00:18:49,559 --> 00:18:54,100
if you're using custom controls but Aria
has now allowed us

337
00:18:54,001 --> 00:18:57,270
to give the semantic equivalence a
slider using

338
00:18:57,369 --> 00:19:01,470
just a little bit more markup

339
00:19:01,047 --> 00:19:04,336
now aria is not just for creating custom
controls

340
00:19:04,759 --> 00:19:08,320
you can also use it to retrofit old
content without actually having to got

341
00:19:08,032 --> 00:19:08,111
it

342
00:19:09,011 --> 00:19:12,017
to going back to our headings example
let's say that it was too risky for you

343
00:19:12,071 --> 00:19:13,370
to be able to change

344
00:19:14,009 --> 00:19:17,013
your code to spit out in h1 tag instead
a div tag

345
00:19:17,409 --> 00:19:20,458
in that case we can apply an aria role
heading

346
00:19:20,899 --> 00:19:23,927
as well as re: a-level 1 to be able to
give this

347
00:19:24,179 --> 00:19:28,278
tagged the semantic equivalence h1 as
far as assistive technology is concerned

348
00:19:29,169 --> 00:19:32,240
obviously for other reasons it would be
better for us to use in h1 tag

349
00:19:32,024 --> 00:19:35,653
but this gives you an option should that
not be possible

350
00:19:35,869 --> 00:19:39,850
conversely let's say that you were using
h1 tag and

351
00:19:39,085 --> 00:19:42,404
for whatever reason this is not a
heading which issues for styling or

352
00:19:43,169 --> 00:19:45,191
whatever else you might use it for

353
00:19:45,389 --> 00:19:50,425
Aria has this idea and implicit roles
and so in h1 tag would automatically get

354
00:19:50,749 --> 00:19:54,752
a row love heading in an aria level a1
see you wouldn't need to specify in that

355
00:19:55,049 --> 00:19:55,940
case

356
00:19:55,094 --> 00:19:58,543
but if you are using h1 tag for you
didn't want to convey that semantic

357
00:19:59,389 --> 00:19:59,990
meaning

358
00:19:59,099 --> 00:20:02,668
you can give it a role a presentation
which would allow

359
00:20:03,559 --> 00:20:06,646
which would basically strip all the
semantic information away from this tag

360
00:20:07,429 --> 00:20:10,438
from assistive technology and give it
the equivalent to being just a plain

361
00:20:10,519 --> 00:20:10,593
give tech

362
00:20:11,259 --> 00:20:15,301
so that can be useful in times

363
00:20:15,679 --> 00:20:19,701
next up is focused management now re:
allows you to mark up your content to

364
00:20:19,899 --> 00:20:21,910
people perceive a ball and
understandable

365
00:20:22,009 --> 00:20:25,036
well keyword accessibility is important
to make inoperable

366
00:20:25,279 --> 00:20:29,470
but another important aspect and
operability is focused management

367
00:20:29,047 --> 00:20:33,336
and if you're using custom controls like
interactive elements and menus

368
00:20:33,759 --> 00:20:37,070
you're going to need to handle the focus
management portion yourself

369
00:20:37,007 --> 00:20:40,686
and you do that using tab index

370
00:20:40,749 --> 00:20:43,950
so HTML tab index property controls

371
00:20:43,095 --> 00:20:47,394
are basically allows you to specify
which elements can gain keyboard focus

372
00:20:48,249 --> 00:20:52,323
either by the user tap into it with the
keyboard or manually using javascript

373
00:20:52,989 --> 00:20:57,016
in a tab index 0 means that an element

374
00:20:57,259 --> 00:21:01,261
tab index 0 means that an element is
focusable with JavaScript

375
00:21:01,279 --> 00:21:04,610
and it is in the default tab order
another words a user can get to it

376
00:21:04,061 --> 00:21:06,350
simply by tapping to it with the keyword

377
00:21:06,899 --> 00:21:10,965
a tab indexes -1 means that an element
is focusable a javascript

378
00:21:11,559 --> 00:21:14,658
but it is not in the default tab order
in other words these are can't get to it

379
00:21:15,549 --> 00:21:18,593
simply by tapping to it and finally

380
00:21:18,989 --> 00:21:22,840
leaving tab index of your control will
mean that the element is not going to

381
00:21:22,084 --> 00:21:23,096
get keyboard focus

382
00:21:23,096 --> 00:21:26,165
either by calling focus on it with
JavaScript

383
00:21:27,029 --> 00:21:31,330
or by these are tap into it with the
keyboard in fact some older user agents

384
00:21:31,033 --> 00:21:34,592
were actually throw javascript error if
you try to call focus on an element

385
00:21:34,889 --> 00:21:39,840
it is not focus upon as a big asterisk
there because native controls like links

386
00:21:39,084 --> 00:21:42,157
in buttons in form elements all get an
implicit tab index

387
00:21:43,057 --> 00:21:48,296
0 in so you don't need to specify it for
this kinda controls

388
00:21:48,809 --> 00:21:51,843
now for example how to use tab index
properly

389
00:21:52,149 --> 00:21:56,580
to achieve great focus management let's
look into it a common set up in web

390
00:21:56,058 --> 00:21:56,997
applications

391
00:21:57,519 --> 00:22:00,710
where you have some focus more content
at the top of the page

392
00:22:00,071 --> 00:22:03,380
then you have a list of items and you
have some focus upon content at the

393
00:22:04,019 --> 00:22:05,081
bottom of the page

394
00:22:05,639 --> 00:22:08,726
now if the user hits the Tab key on this
page you can see the focus is gonna go

395
00:22:09,509 --> 00:22:10,830
to the link at the top

396
00:22:10,083 --> 00:22:13,111
because as you remember it has a tab
indexes 0

397
00:22:14,011 --> 00:22:18,210
in the tab order follows the DOM order
and so this is the first element in the

398
00:22:18,309 --> 00:22:18,356
DOM

399
00:22:18,779 --> 00:22:22,793
with a tad index 0 if they hit the Tab
key again

400
00:22:22,919 --> 00:22:26,440
focus will go to the link at the bottom

401
00:22:26,044 --> 00:22:29,086
and this is because none of the menu
items have a tab index

402
00:22:29,086 --> 00:22:32,515
inner just plain yes

403
00:22:33,289 --> 00:22:36,960
now let's say you want to make these
menu items I accessible with the

404
00:22:36,096 --> 00:22:36,157
keyboard

405
00:22:37,057 --> 00:22:42,006
you can simply add a tab indexes 02 each
one of these menu items

406
00:22:42,519 --> 00:22:44,605
but you can imagine it this mean you
were quite long it would be very

407
00:22:45,379 --> 00:22:48,458
frustrating for the user to have to tap
through each and every item in the menu

408
00:22:49,169 --> 00:22:53,182
to get to the focus on our content at
the bottom so a better experience

409
00:22:53,299 --> 00:22:56,343
would be only expose the currently
selected item

410
00:22:56,739 --> 00:22:59,795
in the tab order we do that by giving
every other element

411
00:23:00,299 --> 00:23:04,700
a tab and exit -1 so now the behavior is
like this

412
00:23:04,007 --> 00:23:07,070
if the user hits the Tab key focus is
gonna go to the first element in the DOM

413
00:23:08,033 --> 00:23:10,462
that has a tab index 0

414
00:23:10,759 --> 00:23:14,190
then it's going to go to the next
element in the DOMA has a tab index 0

415
00:23:14,019 --> 00:23:17,084
in this case it's going to be the first
it's gonna be the selected item

416
00:23:17,084 --> 00:23:21,923
analysts and then if they navigate this
list using a Rockies

417
00:23:22,679 --> 00:23:26,687
you can see that we are moving tab index
0 to the currently selected item each

418
00:23:26,759 --> 00:23:27,610
time

419
00:23:27,061 --> 00:23:31,082
and making sure that all the non
selected items have a tattered exit -1

420
00:23:31,082 --> 00:23:35,501
this is called the roaming tab index
technique

421
00:23:36,239 --> 00:23:39,480
now if the user hits the tacky they're
going to leave the last

422
00:23:39,048 --> 00:23:42,061
inskeep over all the elements for the
tab index -1

423
00:23:42,061 --> 00:23:45,630
in go to the next element that has a tab
index 0 which is the link at the bottom

424
00:23:46,179 --> 00:23:48,251
of the page

425
00:23:48,899 --> 00:23:51,947
this has the added benefit of saving the
user-selected state

426
00:23:52,379 --> 00:23:55,382
so if they were to shift abt from this
link at the bottom

427
00:23:55,409 --> 00:23:59,444
they would go directly back to the
currently selected menu item in the list

428
00:23:59,759 --> 00:24:03,210
which is a really great experience for
keyword users now

429
00:24:03,021 --> 00:24:06,097
they only have to hit tab twice to get
all the way to the bottom of the page to

430
00:24:06,097 --> 00:24:06,144
find

431
00:24:07,044 --> 00:24:10,763
what they're looking for

432
00:24:11,159 --> 00:24:15,196
so to recapture that we talked about how
content should be personable

433
00:24:15,529 --> 00:24:18,550
operable understandable and robust

434
00:24:18,739 --> 00:24:22,580
and we talked about how using semantic
markup in standard controls will get us

435
00:24:22,058 --> 00:24:23,737
most of the way there

436
00:24:24,259 --> 00:24:27,321
we also talk about how you you can use
Aria to fill the gaps

437
00:24:27,879 --> 00:24:30,931
and make our custom controls and all
content more accessible an

438
00:24:31,399 --> 00:24:32,464
understandable

439
00:24:33,049 --> 00:24:36,093
we talked about how to use proper focus
management and key works s ability

440
00:24:36,489 --> 00:24:39,489
to really clean up the user experience

441
00:24:39,489 --> 00:24:42,526
but now we're going to apply all that
knowledge to diagnose and fix

442
00:24:42,859 --> 00:24:45,866
several accessibility issues and
usability issues

443
00:24:45,929 --> 00:24:48,976
in a text editing application that I
don't for the stock

444
00:24:49,399 --> 00:24:52,700
so here we have a text editor that I
created

445
00:24:52,007 --> 00:24:55,034
and if you look at it and click and
click around

446
00:24:55,097 --> 00:24:58,122
with the mouse you can see that we can
zoom this is very similar to the

447
00:24:59,022 --> 00:25:03,791
pages for I cloud user interface that we
looked at earlier I'm we can also

448
00:25:03,989 --> 00:25:07,021
going here and we can add text we can
remove taxed

449
00:25:07,309 --> 00:25:11,710
so to a mouse user interests visual user
this thing works

450
00:25:11,071 --> 00:25:14,470
and you wouldn't even know that it is
completely inaccessible

451
00:25:15,109 --> 00:25:18,185
now when you approach an application and
you start to look at how to make it

452
00:25:18,869 --> 00:25:19,470
accessible

453
00:25:19,047 --> 00:25:22,686
I like two divided up into two different
parts the first part is the keyboard

454
00:25:23,109 --> 00:25:24,122
accessibility part

455
00:25:24,239 --> 00:25:27,720
get it working with the keyboard alone
and then you can turn on the screen

456
00:25:27,072 --> 00:25:27,471
reader

457
00:25:28,119 --> 00:25:31,138
and start looking at something more
finer points for users who cannot see

458
00:25:31,309 --> 00:25:32,312
the page

459
00:25:32,609 --> 00:25:35,690
so to begin testing us with the keyboard
we simply to start hitting a tab key and

460
00:25:36,419 --> 00:25:37,490
see what happens

461
00:25:38,129 --> 00:25:41,200
you can see that I'm getting the Tab key
repeatedly

462
00:25:41,002 --> 00:25:46,161
ants you just see that Safari address
bar is getting focus nothing on the page

463
00:25:46,359 --> 00:25:47,377
is actually changing

464
00:25:47,539 --> 00:25:50,552
and that's because none of these
elements are

465
00:25:50,669 --> 00:25:53,732
are really interactive and none of them
have a tab index at because

466
00:25:54,299 --> 00:25:58,220
if we look at the markup you can see
that the buttons I have here are just

467
00:25:58,022 --> 00:25:58,731
made with

468
00:25:58,929 --> 00:26:03,026
standard if tax and standard attacks
don't have an implicit tab index like

469
00:26:03,899 --> 00:26:05,080
interactive elements

470
00:26:05,008 --> 00:26:08,337
so to get these buttons working with

471
00:26:08,409 --> 00:26:11,497
the keyboard we need to just add a tab
indexes 02 each one of those

472
00:26:12,289 --> 00:26:15,365
so let me go ahead and just add that to
these buttons

473
00:26:16,049 --> 00:26:20,073
see can see that as in Papa but now has
a tab index 0

474
00:26:20,289 --> 00:26:23,348
and the Save button next to it has a
tattered exit 0

475
00:26:23,879 --> 00:26:26,954
and so now if we say then we go back to
our application

476
00:26:27,629 --> 00:26:31,722
and we refresh you can see now that this
improper button has this blue outline

477
00:26:32,559 --> 00:26:36,590
at the top and so we know that this
thing has keyboard focus

478
00:26:36,869 --> 00:26:40,906
but this blue outline is also applied
when you simply just click on

479
00:26:41,239 --> 00:26:45,303
any these buttons and you can see that
it kinda looks weird and so R Q eighteen

480
00:26:45,879 --> 00:26:48,915
and our designers are getting upset with
us because they want to remove this blue

481
00:26:49,239 --> 00:26:51,242
outline because it doesn't look very
good

482
00:26:51,269 --> 00:26:54,460
well removing a blue outline we get us
right back where we started

483
00:26:54,046 --> 00:26:57,115
where these controls are not accessible
with the keyboard at all because the

484
00:26:57,529 --> 00:26:59,554
keyword user we'll never know that they
have focus

485
00:26:59,779 --> 00:27:02,787
and therefore they'll never know that to
be able to interact with them

486
00:27:02,859 --> 00:27:06,960
into a better experience would be rather
than removing the blue outline which is

487
00:27:06,096 --> 00:27:07,170
default on a system

488
00:27:08,007 --> 00:27:11,032
what style it to make it look a little
bit better and so if we're

489
00:27:11,095 --> 00:27:15,064
jump over to our CSS which is right

490
00:27:15,919 --> 00:27:19,927
here this is the CSS for a pop up button
and let me just add in a little bit of

491
00:27:19,999 --> 00:27:20,055
code

492
00:27:20,559 --> 00:27:23,568
to style that CSS

493
00:27:23,649 --> 00:27:27,698
so here I've added a focus

494
00:27:28,139 --> 00:27:31,206
a selector to the button and I'm
removing the default outline

495
00:27:31,809 --> 00:27:34,850
without line 9 so that gets rid of the
blue outline

496
00:27:34,085 --> 00:27:38,234
that they hated and then I'm adding
bordercolor to the

497
00:27:38,999 --> 00:27:42,440
to the button itself which makes it look
a little bit better so if we say that

498
00:27:42,044 --> 00:27:45,122
and we go back to our apt and we hit the
Tab key

499
00:27:46,022 --> 00:27:49,095
you see now that we have this really
beautiful blue outline on the button

500
00:27:49,095 --> 00:27:53,122
in our designers and I Q a team is happy
anarchy where users are happy

501
00:27:54,022 --> 00:27:56,110
so the next thing you wanna start doing
is looking at whether or not we can

502
00:27:57,001 --> 00:27:57,710
actually

503
00:27:57,809 --> 00:28:00,845
activate these controls at the keyboard
so far press the spacebar

504
00:28:01,169 --> 00:28:05,090
I would expect that the many would come
up just as it did when we clicked it

505
00:28:05,009 --> 00:28:09,408
and alas there is no man you coming up
so what we need to do

506
00:28:09,489 --> 00:28:12,497
is we need to actually go back to the
JavaScript in add some very basic

507
00:28:13,289 --> 00:28:16,386
keyboard handlers to be able to tap into
the same cody gets run when the user

508
00:28:17,259 --> 00:28:18,323
clicks on it with the mouse

509
00:28:18,899 --> 00:28:22,962
source do that now peretz we jumped over
to

510
00:28:23,529 --> 00:28:27,590
are JavaScript for a pop up button and
I've separated this code out

511
00:28:27,059 --> 00:28:30,608
I am so that we have kind of a clean
slate for working with the keyboard am

512
00:28:31,139 --> 00:28:31,231
going to add

513
00:28:32,059 --> 00:28:35,155
some additional handlers here

514
00:28:36,019 --> 00:28:39,580
that basically just handle a key down on
the button

515
00:28:39,058 --> 00:28:42,069
and then we check to see whether or not
the event is a

516
00:28:42,069 --> 00:28:45,488
kiko 232 or 13 which is the space bar or
the Return key

517
00:28:46,109 --> 00:28:49,150
and then when that happens we just call
the open method that

518
00:28:49,519 --> 00:28:53,190
is the same method that is called when
the mouse click is registered

519
00:28:53,019 --> 00:28:55,988
and so we're just tapping into the main
code we haven't had a really right

520
00:28:56,159 --> 00:28:58,217
anything extra for this

521
00:28:58,739 --> 00:29:04,210
rights every saving go back to the menu

522
00:29:04,021 --> 00:29:07,240
with TAB key and now we want to hit the
spacebar to activate the menu

523
00:29:07,429 --> 00:29:10,434
and you see the menu comes up so we're
we're getting there next we should be

524
00:29:10,929 --> 00:29:12,600
able to navigate this menu with the

525
00:29:12,006 --> 00:29:15,165
an arrow keys and I'm pressing them and
nothing's happening

526
00:29:15,759 --> 00:29:18,783
so this is where we're going to have to
write a little bit extra code to change

527
00:29:18,999 --> 00:29:20,027
the focus at the menu

528
00:29:20,279 --> 00:29:23,330
as the user uses the rockies so

529
00:29:23,789 --> 00:29:27,690
let's go back there and was just build
on this right here

530
00:29:27,069 --> 00:29:30,074
and add some additional keyword handlers
to the menu

531
00:29:31,019 --> 00:29:34,107
for focusing the next and previous item
says you can see here we're handling a

532
00:29:35,007 --> 00:29:36,033
key down

533
00:29:36,033 --> 00:29:39,712
and were checking the key code for a
downer or an affair

534
00:29:40,009 --> 00:29:43,013
and when we get a downer or not there
were simply going to focus the next to

535
00:29:43,409 --> 00:29:44,448
the previous item

536
00:29:44,799 --> 00:29:47,857
and so let's jump over that currency
with that does

537
00:29:48,379 --> 00:29:51,434
so focus next item just gets the
currently focused item

538
00:29:51,929 --> 00:29:55,934
and if there isn't one focus that gets
the first item a cause I am

539
00:29:56,429 --> 00:29:59,690
focus on item with the next I tend to
focus on the list

540
00:29:59,069 --> 00:30:03,133
itself we look at that method you can
see that we're setting the tab index -1

541
00:30:04,033 --> 00:30:07,372
and we're just calling focus on this
with JavaScript now

542
00:30:07,669 --> 00:30:10,708
as you can remember from our talk about
tab index

543
00:30:11,059 --> 00:30:14,081
calling focus on an element that is not
focus a ble I E

544
00:30:14,279 --> 00:30:19,326
18 you know a are a normal div tag which
doesn't get an implicit avonex

545
00:30:19,749 --> 00:30:22,801
could cause issues an order clients and
so we want to be sure that we have a tab

546
00:30:23,269 --> 00:30:26,281
index set for this element before week
of focus

547
00:30:26,389 --> 00:30:31,190
sore setting it to -1 and you might be
asking why not set it to 0

548
00:30:31,019 --> 00:30:34,698
well if we set it to 0 as the user
navigates this list

549
00:30:34,869 --> 00:30:37,950
those elements are going to be put into
the default tab order which

550
00:30:37,095 --> 00:30:40,194
isn't what we want we want the user to
be able to navigate the list with the

551
00:30:41,049 --> 00:30:41,840
iraqis

552
00:30:41,084 --> 00:30:44,182
in if they were hit the Tab key we want
focus to jump away from the menu to the

553
00:30:45,082 --> 00:30:46,411
next button in the toolbar

554
00:30:47,149 --> 00:30:50,223
and so that's where we're using -1 here
to keep them out of the tab order

555
00:30:50,889 --> 00:30:53,901
in let's just focus to manually with
JavaScript

556
00:30:54,009 --> 00:30:57,085
so if we say that injured back to the
menu

557
00:30:57,769 --> 00:31:00,775
and hit space bar so now you can see
that the currently selected item

558
00:31:01,369 --> 00:31:04,388
is automatically focused when we open
the menu which is a good experience for

559
00:31:04,559 --> 00:31:05,581
our users

560
00:31:05,779 --> 00:31:08,862
then we can navigate this list using the
arrow keys and then

561
00:31:09,609 --> 00:31:13,340
try to select an element with the space
bar and that doesn't work either so we

562
00:31:13,034 --> 00:31:13,072
need a

563
00:31:13,072 --> 00:31:17,161
again goin' hook into the main code to
select this menu item

564
00:31:17,809 --> 00:31:19,867
but I wanted to show you quickly what
happens every press the Tab key from

565
00:31:20,389 --> 00:31:21,411
here

566
00:31:21,609 --> 00:31:24,684
every press the Tab key the menu goes
away and focus has returned

567
00:31:25,359 --> 00:31:29,372
to the next item in the menu that's why
we set tab index -1

568
00:31:29,489 --> 00:31:32,542
are so let's go back to menu and let's
get this working

569
00:31:33,019 --> 00:31:36,020
with the space bar

570
00:31:36,029 --> 00:31:39,330
okay so I'm gonna do is go back up to
you are

571
00:31:39,033 --> 00:31:42,252
switch statement here that handles are
key down and we're gonna have additional

572
00:31:42,549 --> 00:31:42,618
handlers

573
00:31:43,239 --> 00:31:46,470
for both the space bar in the Return key
as well as the ex

574
00:31:46,047 --> 00:31:51,116
escape key to be able to close the menu

575
00:31:51,539 --> 00:31:56,553
okay so actually we we did not handle
the escape guarantee that

576
00:31:56,679 --> 00:31:59,722
next so we've added space bar in return

577
00:32:00,109 --> 00:32:03,197
32 in 13 in all we're doing is we're
selecting the currently focused

578
00:32:03,989 --> 00:32:07,580
item so that just gets the currently
focused item in any calls the Select

579
00:32:07,058 --> 00:32:08,207
code that we have from

580
00:32:08,729 --> 00:32:11,794
the same code that the user uses with
the mouse

581
00:32:12,379 --> 00:32:15,391
so we can go back to menu

582
00:32:15,499 --> 00:32:19,530
yet we first page and then as we go to
say 75 prisons in a meeting hit the

583
00:32:19,809 --> 00:32:22,190
spacebar and see that that works

584
00:32:22,019 --> 00:32:25,020
but we're keyboard focus go the menu
went away

585
00:32:25,002 --> 00:32:28,711
but there's nothing highlighted on the
page there's no insertion point

586
00:32:28,909 --> 00:32:32,913
in the actual editor itself so in this
case we have no idea what he would focus

587
00:32:33,309 --> 00:32:35,366
when did it probably went to the body is
the page

588
00:32:35,879 --> 00:32:39,200
which is a very useful so the keyword
user if they want to change the zoom

589
00:32:39,002 --> 00:32:39,981
level again

590
00:32:40,179 --> 00:32:43,340
we have to tab back to that mean you

591
00:32:43,034 --> 00:32:47,303
and then activated again in again keep
our focus is lost

592
00:32:47,609 --> 00:32:50,940
as you can remember it's a much better
experience for us to you

593
00:32:50,094 --> 00:32:53,283
focus the element that open the menu

594
00:32:54,129 --> 00:32:59,450
after the menu goes away and so that's
going to be very simple

595
00:32:59,045 --> 00:33:02,114
we're just going to add that code and
we're gonna go in

596
00:33:02,519 --> 00:33:06,533
and when the Escape key is pressed we're
going to focus the button

597
00:33:06,659 --> 00:33:09,678
that open the menu and we're gonna close
the menu

598
00:33:09,849 --> 00:33:12,937
similarly when I am enter or return

599
00:33:13,729 --> 00:33:17,340
is pressed we select the currently
focused item we're going to focus the

600
00:33:17,034 --> 00:33:18,373
button to open the menu

601
00:33:18,679 --> 00:33:22,712
in close the menu so very simple stuff
but it really improves the usability for

602
00:33:23,009 --> 00:33:25,036
this code

603
00:33:25,279 --> 00:33:28,286
going back to Safari we go to the menu

604
00:33:28,979 --> 00:33:32,054
we select 50 percent and you can see
that the zoom pop up button is selected

605
00:33:32,729 --> 00:33:34,737
now in the menu goes away

606
00:33:34,809 --> 00:33:38,826
really great usability and now the you
can quickly change all the same levels

607
00:33:38,979 --> 00:33:44,005
just by a couple a keyboard presses so
that's really nice

608
00:33:44,239 --> 00:33:47,252
okay so now we've made this is in Papa
button

609
00:33:47,369 --> 00:33:51,423
completely accessible which is really
great up for a keyboard user

610
00:33:51,909 --> 00:33:54,948
but now we want to scan a switch over
and start talking about screen readers

611
00:33:55,299 --> 00:33:58,304
in making sure that someone who can see
this page is able to interact with these

612
00:33:58,799 --> 00:33:59,856
elements correctly

613
00:34:00,369 --> 00:34:03,840
so the way I'm gonna do that isn't going
to turn on voice over in just are kinda

614
00:34:03,084 --> 00:34:04,097
navigating the page

615
00:34:04,097 --> 00:34:07,766
and seeing what I hear so I'm a turn-on
voice-over on your Mac

616
00:34:08,639 --> 00:34:13,260
with commander 5

617
00:34:13,026 --> 00:34:16,080
here you know okay so whatever came on

618
00:34:16,008 --> 00:34:19,557
and told us that we are on the editor
HTML content

619
00:34:20,349 --> 00:34:24,150
now we can kinda navigate through this
page in kinda see what's going on

620
00:34:24,015 --> 00:34:28,023
I'm to quickly jump over to the gym but

621
00:34:28,023 --> 00:34:31,097
and interact with tens to into 50
percent

622
00:34:31,097 --> 00:34:34,174
clickable okay so we got to the Zoom
button and voice-over said

623
00:34:35,074 --> 00:34:39,125
50 percent clickable now that does tell
us what the content is it that

624
00:34:40,025 --> 00:34:41,037
particular death

625
00:34:41,037 --> 00:34:44,126
and it tells us they can do something
with it but it doesn't really give them

626
00:34:45,026 --> 00:34:49,032
any information about what this button
is really what it does

627
00:34:49,032 --> 00:34:52,109
we want instead tell the user that this
is this is in pop up but

628
00:34:53,009 --> 00:34:56,078
give its current value and let them know
that in when they

629
00:34:56,078 --> 00:34:58,087
click on this button when i activate
this button that they're gonna get a

630
00:34:59,068 --> 00:35:00,095
menu

631
00:35:00,095 --> 00:35:03,172
and so left her a voice over and let's
go at some Aria attributes to this div

632
00:35:04,072 --> 00:35:04,140
tag

633
00:35:05,004 --> 00:35:09,006
to convey this information to the user
was overall

634
00:35:09,006 --> 00:35:14,080
switching back to Xcode I'm going to go
back to our markup

635
00:35:15,034 --> 00:35:18,053
and I'm going to add just a few re:
attributes to the markup

636
00:35:18,053 --> 00:35:21,114
to be able to tell these are a little
bit more about this control so

637
00:35:22,014 --> 00:35:26,050
as recovered earlier you can add a role
image added the role but

638
00:35:26,005 --> 00:35:30,028
and we've also added the Aria property
has pop up people true

639
00:35:30,073 --> 00:35:33,073
and what that tells the user is that
when they activate this button

640
00:35:33,073 --> 00:35:35,171
a pop-up menus gonna come up and so they
can know that there's something else

641
00:35:36,071 --> 00:35:38,150
that they can interact with

642
00:35:39,005 --> 00:35:42,019
similarly for the Save button I've just
added a role but

643
00:35:42,064 --> 00:35:46,108
that's really all we need to do because
the label is is pure text inside the div

644
00:35:47,008 --> 00:35:47,054
tag

645
00:35:47,054 --> 00:35:50,100
and so voice-overs gonna get that
automatically

646
00:35:51,000 --> 00:35:55,008
right so if we jump over to Safari

647
00:35:55,008 --> 00:36:00,096
and refresh the page we turn on was over

648
00:36:00,096 --> 00:36:03,111
so far 100 percent pop

649
00:36:04,011 --> 00:36:07,048
okay so voice-over said 100 percent pop
up button

650
00:36:07,048 --> 00:36:11,049
and thats a lot better but we're still
not getting the actual

651
00:36:11,049 --> 00:36:14,051
I we're not worse not telling them that
this is a zoom pop up button

652
00:36:14,051 --> 00:36:17,058
so we're going to add some Aria labels
to the cinema show you how to add Aria

653
00:36:18,021 --> 00:36:18,089
label

654
00:36:18,089 --> 00:36:21,116
along with the current value the control
to make this control really

655
00:36:22,016 --> 00:36:27,016
usable for a voice-over user we saw

656
00:36:27,016 --> 00:36:30,083
okay so what at Aria label to the
control

657
00:36:30,083 --> 00:36:34,140
and if we go back into here so here's
the JavaScript actually handle selection

658
00:36:35,004 --> 00:36:38,005
and so we added this method called
sinking value

659
00:36:38,041 --> 00:36:42,133
which basically what it does is when the
the selection changes for this menu

660
00:36:43,033 --> 00:36:46,115
it finds out what the currently selected
zoom level is and then it modifies the

661
00:36:47,015 --> 00:36:49,026
mark up to show the current zoom level

662
00:36:49,026 --> 00:36:53,061
and we've hooked into that too also
update Aria label attribute here

663
00:36:53,061 --> 00:36:57,063
and what we're doing is we're just a
pending the air pretending the value

664
00:36:57,063 --> 00:37:00,080
along with a a localized string apps im

665
00:37:00,008 --> 00:37:03,009
and that allows us to tell the boys are
using a lot more information about this

666
00:37:03,081 --> 00:37:04,170
control

667
00:37:05,007 --> 00:37:08,034
so click back over his fiery Jenna Bush
Hager was over on

668
00:37:08,097 --> 00:37:12,146
so 100 percent soup okay so that tells
the user everything you need to know

669
00:37:13,046 --> 00:37:14,058
about this control

670
00:37:14,058 --> 00:37:17,066
now if we activated control you are
currently a problem

671
00:37:18,038 --> 00:37:21,119
notice voice-over doesn't tell us
anything about this menu 50 percent

672
00:37:22,019 --> 00:37:25,019
zoom problem but when the menus value
changes

673
00:37:25,019 --> 00:37:28,065
we do get the updated value so the next
thing we want to do is make this many

674
00:37:28,065 --> 00:37:30,090
more accessible for voiceover

675
00:37:30,009 --> 00:37:36,014
Boys Over Law so we flew back over to
the markup

676
00:37:36,095 --> 00:37:39,143
you can see that the menu is implemented
using only div tags

677
00:37:40,043 --> 00:37:43,117
which is typically how you would use a
menu and so all we want to do is add

678
00:37:44,017 --> 00:37:44,089
some Aria

679
00:37:44,089 --> 00:37:47,115
mark up to this menu to get it usable
voice-over

680
00:37:48,015 --> 00:37:52,020
so we added to the menu a row love menu

681
00:37:52,065 --> 00:37:55,078
and then for each other items we at
Roland menu item radio

682
00:37:55,078 --> 00:37:59,116
which tells the user that they can only
select one of these menu items at a time

683
00:38:00,016 --> 00:38:02,085
there similarly there you know you can
use a menu item if there are multiple

684
00:38:02,085 --> 00:38:05,087
things you can select you can use check
states that kinda thing

685
00:38:05,087 --> 00:38:08,110
but for this purpose we're only going to
use menu item radio

686
00:38:09,001 --> 00:38:13,014
in there were gonna at Aria checked it
was true for the currently selected menu

687
00:38:13,023 --> 00:38:13,101
item

688
00:38:14,001 --> 00:38:17,089
and again we're gonna update this as the
selection changes

689
00:38:17,089 --> 00:38:21,164
alright so what's jump back to the menu
and see how this changes things

690
00:38:22,064 --> 00:38:25,127
was over on so far 100 percent soon
problem

691
00:38:26,027 --> 00:38:29,031
so that works out great one check 100
percent check

692
00:38:29,067 --> 00:38:32,121
check mark 100 ok it's a voice overs
telling us that we're on the one hundred

693
00:38:33,021 --> 00:38:34,040
percent menu item

694
00:38:34,004 --> 00:38:37,068
that there are 5 items and that this one
they were currently on a selected

695
00:38:38,004 --> 00:38:42,069
now if we navigate to say 75 percent 75
percent magnified

696
00:38:42,069 --> 00:38:45,096
tell us that there are 5 items on the
menu and they were on 75 percent

697
00:38:45,096 --> 00:38:48,102
50 said one check mark 100 percent

698
00:38:49,002 --> 00:38:53,035
check okay grade 5 percent 75 percent
soup

699
00:38:53,035 --> 00:38:56,042
so we selected 75 percent we just want
to go back into the menu and make sure

700
00:38:56,042 --> 00:38:57,045
that the selection stay

701
00:38:57,072 --> 00:39:00,097
was updated one check mark 75 percent

702
00:39:00,097 --> 00:39:04,119
check 50 percent 50 overs one check mark
75 percent

703
00:39:05,019 --> 00:39:09,035
check check great so this menu is now
completely accessible voice-over which

704
00:39:09,035 --> 00:39:10,121
is really really great

705
00:39:11,021 --> 00:39:15,023
okay so as you saw from the demo using
just a little bit of extra HTML markup

706
00:39:15,041 --> 00:39:19,130
and tapping into our existing JavaScript
code in handling a few keyboard events

707
00:39:20,003 --> 00:39:24,040
we were able to really improve the user
experience our text editing application

708
00:39:24,067 --> 00:39:27,086
we were able to make it fully accessible
using a screen reader

709
00:39:27,086 --> 00:39:30,088
in this case voice over on the Mac

710
00:39:30,088 --> 00:39:33,183
so to begin wrapping up I'd like to
reemphasize for the most important

711
00:39:34,083 --> 00:39:36,102
points at this talk

712
00:39:37,002 --> 00:39:40,017
you should strive to make your content
perceivable

713
00:39:40,017 --> 00:39:45,094
operable understandable and robust

714
00:39:45,094 --> 00:39:48,163
using standard controls and semantic
markup wherever possible will make this

715
00:39:49,063 --> 00:39:49,105
a lot

716
00:39:50,005 --> 00:39:54,082
easier but you can use Aria to fill the
gaps

717
00:39:54,082 --> 00:39:57,103
were aged email doesn't provide you
enough control

718
00:39:58,003 --> 00:40:01,047
in finally gesture applications with the
keyboard

719
00:40:01,047 --> 00:40:04,128
all mouse interaction should be able to
be duplicated with the keyboard alone

720
00:40:05,028 --> 00:40:08,032
in fire up a screen reader in really
thoroughly test your application

721
00:40:08,068 --> 00:40:12,091
in be asking yourself if I can't see it
does this really make sense

722
00:40:12,091 --> 00:40:15,157
in my really getting all the information
it's here that aside user sees

723
00:40:16,057 --> 00:40:19,085
and then use Aria to kinda fill in those
gaps and

724
00:40:19,085 --> 00:40:22,146
make your user experience a lot better

725
00:40:23,046 --> 00:40:26,071
for more information you can talk you
can contact check their answers are

726
00:40:26,071 --> 00:40:27,120
everywhere to banja list

727
00:40:28,002 --> 00:40:31,033
I've included links to the Web Content
Accessibility Guidelines

728
00:40:31,051 --> 00:40:35,100
as well as the Aria documentation so you
can learn all about roles in properties

729
00:40:36,000 --> 00:40:38,083
and also included a link to the talk
today promised you about using

730
00:40:38,083 --> 00:40:39,164
accessibility and automation

731
00:40:40,064 --> 00:40:44,139
and of course you can always reach out
to us to the Apple Developer forms

732
00:40:45,039 --> 00:40:48,048
in case you want a little bit more
information these talks

733
00:40:48,048 --> 00:40:52,057
I would highly recommend you check out
the videos accessible yet last 10

734
00:40:52,057 --> 00:40:55,143
I O S in the more information about the
web inspector in modern javaScript can

735
00:40:56,043 --> 00:40:56,122
be found

736
00:40:57,022 --> 00:41:01,039
in a talk on Thursday thank you guys so
much for listening I hope you have a

737
00:41:01,039 --> 00:41:01,128
wonderful day

738
00:41:02,028 --> 00:41:04,079
and safe travels safe travels back home
thank you

