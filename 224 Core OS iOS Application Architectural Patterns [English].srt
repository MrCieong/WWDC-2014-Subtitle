1
00:00:12,006 --> 00:00:14,093
welcome to core IO s application
architectural patterns

2
00:00:14,093 --> 00:00:15,175
my name's bill that me and I were

3
00:00:16,075 --> 00:00:23,075
you like at thanks for being here so
exciting

4
00:00:25,055 --> 00:00:29,073
so much cool stuff this year okay so

5
00:00:29,073 --> 00:00:32,135
by way of introduction what we're gonna
talk about today is the

6
00:00:33,035 --> 00:00:36,044
through the list of common patterns that
we find across

7
00:00:36,044 --> 00:00:39,079
all the frameworks in I O S in Cocoa
Touch

8
00:00:39,079 --> 00:00:43,083
we're also gonna spend some time talking
about how we can apply

9
00:00:43,083 --> 00:00:46,089
these patterns to your code

10
00:00:46,089 --> 00:00:49,157
how we can make your applications better
by understanding these patterns 1

11
00:00:50,057 --> 00:00:53,136
and then applying the concepts defined
in those patterns

12
00:00:53,649 --> 00:00:58,500
to the code that we write aren't so
common patterns and you like it and

13
00:00:58,005 --> 00:00:58,074
beyond

14
00:00:59,019 --> 00:01:02,093
the great thing about these common
patterns is that once you understand it

15
00:01:02,093 --> 00:01:03,292
in one context

16
00:01:04,129 --> 00:01:07,206
the way that we use them across all of
Cocoa Touch ends up being

17
00:01:07,899 --> 00:01:12,907
very similar so when you first look at
the list documentation we have all these

18
00:01:12,979 --> 00:01:16,004
frameworks a core video Corradi ok or
animation

19
00:01:16,229 --> 00:01:20,270
foundation core data and so forth can be
a little overwhelming you look at that

20
00:01:20,027 --> 00:01:20,114
list and say

21
00:01:21,014 --> 00:01:24,108
holy Caleta giant fire hose that I have
to ingest right now

22
00:01:25,008 --> 00:01:29,085
all the great thing though is that again
these patterns are used in a common way

23
00:01:29,085 --> 00:01:33,121
throughout this whole stack love of
remarks so when you understand one

24
00:01:34,021 --> 00:01:35,070
pattern in one framework

25
00:01:35,007 --> 00:01:38,011
you can apply that knowledge across the
whole stack of remarks

26
00:01:38,074 --> 00:01:41,106
so it really levels out the amount of
learning that you have to do

27
00:01:42,006 --> 00:01:46,205
let's get started with the first pattern
next target action

28
00:01:46,259 --> 00:01:50,270
now target action is a consistent way to
connect

29
00:01:50,027 --> 00:01:54,070
controls to custom logic things in your
user interface connected to the code

30
00:01:54,007 --> 00:01:55,356
that makes your application

31
00:01:56,049 --> 00:01:59,990
what it is so if you've ever done this
in Xcode

32
00:01:59,099 --> 00:02:03,145
you have seen target action in action
when you drag that connection from the

33
00:02:04,045 --> 00:02:04,604
button

34
00:02:05,009 --> 00:02:09,040
to your view controller it saying hey
whenever this button is activated

35
00:02:09,004 --> 00:02:14,032
kick off this message here's an example
from 10 our applications

36
00:02:14,032 --> 00:02:17,118
this is the message application and we
have

37
00:02:18,018 --> 00:02:21,066
several buttons on here that top when
the cancel button

38
00:02:21,066 --> 00:02:24,081
course when that's tapped that's gonna
send

39
00:02:24,081 --> 00:02:27,134
cancel message gonna delete the message
in and get rid of this

40
00:02:28,034 --> 00:02:32,091
this presented view controller when the
user taps on send

41
00:02:32,091 --> 00:02:35,139
it's going to package up the message
push it off into the interwebs this can

42
00:02:36,039 --> 00:02:36,044
end up

43
00:02:36,089 --> 00:02:40,104
in whoever's device you're having a
conversation with now

44
00:02:41,004 --> 00:02:44,050
the really cool thing is these two
classes that make

45
00:02:44,005 --> 00:02:47,061
these instances the classes for these
instances are from completely different

46
00:02:48,006 --> 00:02:49,465
places in the class hierarchy

47
00:02:49,519 --> 00:02:52,590
you I Barbara might bar button item

48
00:02:52,059 --> 00:02:55,145
is a subclass a business object you I
button is a subclass

49
00:02:56,045 --> 00:03:00,103
a UI control but both have them apply
this target action paradigm

50
00:03:01,003 --> 00:03:04,029
so that you don't really have to think
about the fact that they're different

51
00:03:04,029 --> 00:03:04,084
classes

52
00:03:04,084 --> 00:03:07,090
they both applied his pattern in a very
consistent way

53
00:03:08,044 --> 00:03:11,373
so once you understand it for one you
understand it for both

54
00:03:11,769 --> 00:03:15,791
getting a little more abstract talking
about target action

55
00:03:15,989 --> 00:03:20,510
the idea is you have a control or an
initiator something that kicks off

56
00:03:20,051 --> 00:03:23,079
the message sent

57
00:03:23,079 --> 00:03:26,148
that has a target object that it sends
the message to

58
00:03:27,048 --> 00:03:31,081
and in the particular message that it
sends is called the action message

59
00:03:31,081 --> 00:03:36,340
what you understand this again where
were ever we use this its use in such a

60
00:03:37,069 --> 00:03:40,072
consistent way that if you understand it
in one context

61
00:03:40,099 --> 00:03:44,700
you understand it in all the contacts so
with gesture recognizers

62
00:03:44,007 --> 00:03:47,466
same thing a gesture recognizer has a
target

63
00:03:48,159 --> 00:03:51,231
an action in when you create that
gesture recognizer you specify that

64
00:03:51,879 --> 00:03:55,310
so again it's exactly the same kind of
concept is what we see

65
00:03:55,031 --> 00:03:59,038
with the control objects so that's
target action

66
00:04:00,001 --> 00:04:04,036
a way to specify a connection between
two objects and get those

67
00:04:04,036 --> 00:04:07,087
control objects to invoke custom code in
your application

68
00:04:07,087 --> 00:04:10,161
next up is the responder chain

69
00:04:11,061 --> 00:04:15,113
the responder chain let your application
handle events

70
00:04:16,013 --> 00:04:20,015
without knowledge which particular
object is going to be used to handle

71
00:04:20,033 --> 00:04:20,872
that event

72
00:04:21,169 --> 00:04:25,590
responder chain kicks off with some sort
of initiators just some object in your

73
00:04:25,059 --> 00:04:25,068
application

74
00:04:26,049 --> 00:04:30,103
that kicks off the process it could be
user action it could be a control

75
00:04:31,003 --> 00:04:35,052
for controller that's an action to the
first responder

76
00:04:35,052 --> 00:04:38,121
and that first responder might respond
to it and if it does then the process is

77
00:04:39,021 --> 00:04:39,069
done

78
00:04:39,069 --> 00:04:43,146
that responder has handled that message
and its its complete but if it doesn't

79
00:04:44,046 --> 00:04:47,133
its gonna ask its next responder eighty
you respond to this message

80
00:04:48,033 --> 00:04:51,087
and if it does then of course it will
handle it but if it doesn't keeps going

81
00:04:51,087 --> 00:04:52,146
up the responder chain

82
00:04:53,046 --> 00:04:56,061
until it finds some responder that
actually

83
00:04:56,061 --> 00:04:59,066
implements the message whatever that was
that was asked to be done

84
00:04:59,066 --> 00:05:03,071
change the color of the text field or
copy the contents of a text field or

85
00:05:03,071 --> 00:05:04,165
whatever you happen to send

86
00:05:05,065 --> 00:05:08,149
up the responder chain a particular
place for use this

87
00:05:09,049 --> 00:05:13,054
is with motion events on user shakes the
phone

88
00:05:13,099 --> 00:05:16,898
we send this motion begin motion in did

89
00:05:17,789 --> 00:05:20,827
in motion cancelled to the responder
chain

90
00:05:21,169 --> 00:05:24,600
and so that travels up the responder
chain looking for the object that

91
00:05:24,006 --> 00:05:26,074
response to that message

92
00:05:27,028 --> 00:05:30,040
the great thing is you can use the
responder chain to respond to things

93
00:05:30,004 --> 00:05:31,100
like that like motion in did

94
00:05:32,036 --> 00:05:35,107
by implementing it wherever it makes
sense in the responder chain so here's a

95
00:05:36,007 --> 00:05:37,007
picture that

96
00:05:37,007 --> 00:05:41,084
die grammatically expresses what what
all applications have as their responder

97
00:05:41,084 --> 00:05:41,147
chain

98
00:05:42,047 --> 00:05:45,866
it starts off in the view hierarchy it
travels up the hierarchy till it gets to

99
00:05:46,289 --> 00:05:47,314
a view controller

100
00:05:47,539 --> 00:05:51,360
the view controller it doesn't implement
it passes it up to the window the window

101
00:05:51,036 --> 00:05:54,059
to the application and finally the
application to

102
00:05:54,059 --> 00:05:58,063
the application delegate and that's the
responder chain

103
00:05:58,099 --> 00:06:01,105
it lets you build a group of objects
that are going to eventually find out

104
00:06:02,059 --> 00:06:03,068
who's responsible for

105
00:06:04,049 --> 00:06:07,127
implementing a particular message next
up

106
00:06:08,027 --> 00:06:13,096
is composite

107
00:06:13,096 --> 00:06:16,105
composite let's manipulate a group of
objects

108
00:06:17,005 --> 00:06:20,274
as a single object and we use this
extensively

109
00:06:20,319 --> 00:06:25,020
and the view hierarchy so start off with
a single view

110
00:06:25,002 --> 00:06:28,060
created Alec and it was frame I create a
new view

111
00:06:28,006 --> 00:06:33,032
an incall add some view

112
00:06:33,086 --> 00:06:36,090
now these two objects the parent view in
blue here

113
00:06:36,009 --> 00:06:40,015
and the child be the one in green are in
this composite relationship so now I can

114
00:06:41,005 --> 00:06:43,042
treat the whole hierarchy and I could
have

115
00:06:43,087 --> 00:06:46,786
hundreds views underneath up luv you but
I get to treat all of them

116
00:06:47,569 --> 00:06:51,588
as one composite object so I can do
things like

117
00:06:51,759 --> 00:06:56,870
move that pay review and when I do all
that's abuse move along with it

118
00:06:56,087 --> 00:06:59,172
same thing with other actions that I
tell that you do move it back and then I

119
00:07:00,072 --> 00:07:01,075
rotated

120
00:07:01,075 --> 00:07:05,214
all this abuse in that composite are
treated together as one

121
00:07:05,889 --> 00:07:09,898
object

122
00:07:09,979 --> 00:07:13,210
we also use the a you hierarchy

123
00:07:13,021 --> 00:07:18,038
as I said earlier in the responder chain
so as you add child abuse to a view

124
00:07:18,038 --> 00:07:22,124
its super view the new child beauty was
just added it's super you becomes that

125
00:07:23,024 --> 00:07:23,088
use

126
00:07:23,088 --> 00:07:26,092
next responder and so that's how it gets
up to the point where it finds a view

127
00:07:27,028 --> 00:07:28,063
that has a view controller Zach

128
00:07:28,063 --> 00:07:31,130
travels up its super view hierarchy

129
00:07:32,003 --> 00:07:35,872
and again we use the same pattern in
multiple places

130
00:07:36,169 --> 00:07:39,174
you spent much time using the UI
dynamics

131
00:07:39,669 --> 00:07:43,673
a dynamic behavior is able to have a
child dynamic behavior

132
00:07:44,069 --> 00:07:47,091
and if you group them together in a
composite by calling add

133
00:07:47,289 --> 00:07:52,940
child behavior than those two behaviors
are treated together as one thing

134
00:07:52,094 --> 00:07:56,443
by the physics simulation that's running
in the background

135
00:07:57,289 --> 00:08:00,430
so that's composite allowing us to build
a group of objects

136
00:08:00,043 --> 00:08:03,044
into a tree that then we can treat as
one

137
00:08:03,044 --> 00:08:06,111
single object

138
00:08:07,011 --> 00:08:10,880
next up is delegation

139
00:08:10,979 --> 00:08:14,840
that allows us to customize behavior in
our applications

140
00:08:14,084 --> 00:08:17,096
with out subclassing the object whose
behavior

141
00:08:17,096 --> 00:08:23,015
we are customizing so great example that
you see an almost every introductory

142
00:08:23,879 --> 00:08:27,340
it introduction to doing I listed on
this talking about

143
00:08:27,034 --> 00:08:31,203
the application delegate the application

144
00:08:31,509 --> 00:08:34,870
is delegating to the application
delegate

145
00:08:34,087 --> 00:08:37,166
to customize the way it behaves there's
a send a message that the

146
00:08:38,066 --> 00:08:41,855
application delegate protocol specifies
application is gonna go into the

147
00:08:42,449 --> 00:08:43,140
background

148
00:08:43,014 --> 00:08:46,833
application is gonna come into the
foreground application

149
00:08:46,959 --> 00:08:51,028
wants to open this URL and so forth all
those methods that you implement in your

150
00:08:51,649 --> 00:08:52,740
delegate

151
00:08:52,074 --> 00:08:55,118
customize the way you I application tax

152
00:08:56,018 --> 00:09:00,082
but you don't have to know anything
about the details view application

153
00:09:00,082 --> 00:09:03,098
so this is a very particular decision
made by

154
00:09:03,098 --> 00:09:06,099
you I kid to use this form

155
00:09:07,008 --> 00:09:10,060
love delegation we could have

156
00:09:10,006 --> 00:09:13,028
on the other hand we could have asked
you to subclass UI application

157
00:09:13,082 --> 00:09:15,181
and that would work there's actually do
we frame works out there that ask you to

158
00:09:16,081 --> 00:09:19,087
some class the object to come out and do
a free market

159
00:09:19,087 --> 00:09:23,129
but if we ask you to subclass UI
application you would have to understand

160
00:09:24,029 --> 00:09:26,578
a lotta detail about you I application

161
00:09:26,839 --> 00:09:30,882
which methods are safe to override which
methods are not safe to override

162
00:09:31,269 --> 00:09:36,250
if I do override this method do I have
to call super or is that of tional

163
00:09:36,025 --> 00:09:39,554
we don't wanna put that cognitive load
on you we don't you have to think about

164
00:09:39,779 --> 00:09:40,797
that stuff

165
00:09:40,959 --> 00:09:44,100
so instead using this idea delegation

166
00:09:44,001 --> 00:09:48,610
allows us to delegate to your code to
say what do you want

167
00:09:48,709 --> 00:09:51,753
custom what you want special to have
happened

168
00:09:52,149 --> 00:09:55,170
when the application goes into the
background or when it comes into the

169
00:09:55,017 --> 00:09:56,116
foreground

170
00:09:56,269 --> 00:10:00,670
that allows you to customize the way you
application works without us having

171
00:10:00,067 --> 00:10:03,145
to force you to understand all that
detail about you I application

172
00:10:04,045 --> 00:10:07,086
now of course there's still a lot to
detail the afternoon on but that's what

173
00:10:07,086 --> 00:10:10,144
makes you awesome developers

174
00:10:11,044 --> 00:10:14,122
and again we use this in many many
frameworks throughout I O S

175
00:10:15,022 --> 00:10:19,261
here's just a few a V Foundation makes
extensive use it delegates

176
00:10:19,459 --> 00:10:22,790
coronation has delegates on their layers

177
00:10:22,079 --> 00:10:25,173
game kit has a couple different classes
including GK session that had delegates

178
00:10:26,073 --> 00:10:29,552
and in every case that delegate is about

179
00:10:30,209 --> 00:10:35,160
customizing the behavior those other
classes without you having to subclass

180
00:10:35,016 --> 00:10:36,105
from them

181
00:10:37,005 --> 00:10:40,284
okay so that's delegation next up

182
00:10:40,329 --> 00:10:43,480
is datasource

183
00:10:43,048 --> 00:10:46,074
that allows you to customize data
retrieval

184
00:10:46,074 --> 00:10:50,083
without having to subclass the object
that needs the data

185
00:10:51,064 --> 00:10:54,203
common example from you I kid you I
tableview

186
00:10:54,779 --> 00:10:57,970
has a UI tableview datasource

187
00:10:57,097 --> 00:11:00,154
that allows the table view to know how
many sections it has

188
00:11:01,054 --> 00:11:05,163
how many rows are in each section what
data belongs in each of the rows that

189
00:11:05,649 --> 00:11:07,010
are in that section

190
00:11:07,001 --> 00:11:10,056
so the table view asks its data source

191
00:11:10,056 --> 00:11:14,085
all these questions that gives you the
chance to customize how the data is

192
00:11:14,085 --> 00:11:16,143
retrieved where it comes from and so
forth

193
00:11:17,043 --> 00:11:20,136
and provided to the table view but you
don't have to subclass tableview

194
00:11:21,036 --> 00:11:25,038
be the same situation subclassing table
tableview would require you to know also

195
00:11:25,056 --> 00:11:26,705
to detail about that

196
00:11:27,209 --> 00:11:32,380
that we didn't have to force you to
think through

197
00:11:32,038 --> 00:11:36,054
so here's some other examples inside you
like it same basic store you I pick your

198
00:11:36,054 --> 00:11:38,145
views as hey how many things belong in
my picture view

199
00:11:39,045 --> 00:11:42,068
page view controller hey how many things
show up in my page view

200
00:11:42,068 --> 00:11:46,087
give me the next thing is gonna show up
in here so again if you understand

201
00:11:46,087 --> 00:11:49,114
datasource in one context when you see
that word

202
00:11:50,014 --> 00:11:54,036
datasource it means the same thing
throughout all the frameworks

203
00:11:54,036 --> 00:11:59,055
so again you to leverage that learning
across all these different things

204
00:11:59,055 --> 00:12:03,058
so back to the definition here
datasource customized data retrieval

205
00:12:03,085 --> 00:12:05,254
without subclassing

206
00:12:06,019 --> 00:12:10,060
now looks an awful lot like customize
behavior without subclassing

207
00:12:10,006 --> 00:12:13,007
and in fact these two ideas are really
similar

208
00:12:13,016 --> 00:12:16,020
its it's the idea of composing an object
rather than

209
00:12:16,056 --> 00:12:20,130
extending a class and so you use a
couple projects compose them together to

210
00:12:21,003 --> 00:12:22,052
get custombehavior

211
00:12:22,079 --> 00:12:26,091
rather than subclassing into powerful
idea that we use like I said in many

212
00:12:26,091 --> 00:12:28,104
different places

213
00:12:29,004 --> 00:12:33,075
so that data source it allows you to
customized where data comes from

214
00:12:33,075 --> 00:12:38,156
for an object that needs data without
having to subclass that object

215
00:12:39,056 --> 00:12:42,275
alright next up is model view controller

216
00:12:42,779 --> 00:12:47,010
model-view-controller zine lots and lots
over documentation water broke at what

217
00:12:47,001 --> 00:12:50,950
have a lot of things to say about
model-view-controller there's probably

218
00:12:50,959 --> 00:12:55,990
a definition for Model View Controller
for every person in here

219
00:12:56,269 --> 00:13:00,620
or maybe more the way I like to think
about it is model view controller gives

220
00:13:00,062 --> 00:13:00,091
us

221
00:13:00,091 --> 00:13:04,132
away to organize to to build an
organizational structure

222
00:13:05,032 --> 00:13:11,481
around the responsibilities that our
application has

223
00:13:11,769 --> 00:13:14,970
would start off talking about the model

224
00:13:14,097 --> 00:13:17,105
so I like to think at the mall or the
way like to describe how to think about

225
00:13:18,005 --> 00:13:18,057
the model

226
00:13:18,057 --> 00:13:21,113
is it's the data it's the stuff that
makes up your application

227
00:13:22,013 --> 00:13:25,029
this is typically something that that
people don't have trouble getting their

228
00:13:25,029 --> 00:13:28,070
heads wrapped around the typically can
look at what their application is doing

229
00:13:28,007 --> 00:13:29,136
and say oh I see

230
00:13:29,829 --> 00:13:33,300
that a model object

231
00:13:33,003 --> 00:13:37,222
the view also ends up being a pretty
pretty well understood peace

232
00:13:37,519 --> 00:13:43,320
a the NBC puzzle it's the thing that
displays the information to the user

233
00:13:43,032 --> 00:13:46,117
intakes user interaction taps and moves
and so forth

234
00:13:47,017 --> 00:13:50,099
interns those into state changes on the
model are sorry and and

235
00:13:50,099 --> 00:13:54,116
allows the user to make those kind of
gestures and the controller is then

236
00:13:55,016 --> 00:13:57,495
what's responsible for shuffling that

237
00:13:57,639 --> 00:14:00,760
back and forth so it takes information
from the model

238
00:14:00,076 --> 00:14:03,167
and shuffles it so that it can show up
in the view and then takes the user's

239
00:14:04,067 --> 00:14:05,104
interaction in the view

240
00:14:06,004 --> 00:14:11,063
and shuffles that back into state
updates on the model side

241
00:14:11,063 --> 00:14:14,116
so that model view controller an
organizational structure for how we can

242
00:14:15,016 --> 00:14:16,018
think about

243
00:14:16,018 --> 00:14:20,107
the objects and their responsibilities
in our applications

244
00:14:21,007 --> 00:14:24,010
so now let's take these ideas the set of
patterns that we've discussed

245
00:14:24,037 --> 00:14:27,104
and talk about how they apply

246
00:14:28,004 --> 00:14:32,007
in our applications how they're used to
do that we're gonna SRU

247
00:14:32,007 --> 00:14:36,007
bit think through a sample application

248
00:14:36,007 --> 00:14:39,016
and wind you build an application I hope

249
00:14:39,016 --> 00:14:42,105
that olive you have downloaded The Hague
The Human Interface Guidelines

250
00:14:43,005 --> 00:14:47,007
its in iBooks is well it's very near the
swift book if you look at this with book

251
00:14:47,025 --> 00:14:49,094
and then you tap on related but you
should see

252
00:14:49,094 --> 00:14:52,363
The Hague book in there in there there's
a whole section where we spend time

253
00:14:53,209 --> 00:14:56,271
talking about something called an
application definition statement

254
00:14:56,829 --> 00:14:59,923
many people who have unfocused
applications art able to come up with

255
00:15:00,769 --> 00:15:03,250
this their architecture ends up being
very

256
00:15:03,025 --> 00:15:06,081
a dispersed for whatever not well
thought through

257
00:15:06,081 --> 00:15:10,050
so I like to tell people to really spend
some time thinking about this 30-second

258
00:15:10,779 --> 00:15:11,860
elevator pitch

259
00:15:11,086 --> 00:15:14,100
what your application is and who it's
for

260
00:15:15,000 --> 00:15:18,006
so our application is going to allow
people to share simple

261
00:15:18,006 --> 00:15:21,052
short updates about what's happening in
their lives

262
00:15:22,006 --> 00:15:26,215
so this simple phrase here has a bunch
of architectural implications for water

263
00:15:26,269 --> 00:15:28,120
application needs to look like

264
00:15:28,012 --> 00:15:31,030
and some requirements that the
application has

265
00:15:31,003 --> 00:15:34,102
so the application needs to share

266
00:15:34,399 --> 00:15:37,411
so far I'm gonna share some information
with you and we happen to be in

267
00:15:37,519 --> 00:15:38,500
different places

268
00:15:38,005 --> 00:15:41,274
we need to have a network so I can take
that information push it out to the

269
00:15:41,769 --> 00:15:42,600
Internet

270
00:15:42,006 --> 00:15:45,045
and then you're able to pull it down

271
00:15:45,099 --> 00:15:48,154
it's going to be short updates that's
worth implies there's going to be a lot

272
00:15:49,054 --> 00:15:52,060
so we have a scrolling list information

273
00:15:52,006 --> 00:15:55,089
and then finally what's happening and
since it's what's happening now

274
00:15:56,043 --> 00:16:01,117
it needs to be fast so call our
application twinkling here's a few

275
00:16:02,017 --> 00:16:05,056
ideas love seems that

276
00:16:05,209 --> 00:16:08,272
this application needs to do or we might
want to do

277
00:16:08,839 --> 00:16:12,430
mark items edit post add photos

278
00:16:12,043 --> 00:16:15,111
so in the process is sort of thinking
through water application doesn't and

279
00:16:16,011 --> 00:16:18,170
what the architecture of it is going to
be

280
00:16:18,269 --> 00:16:21,600
missus or the process I go through
whenever I'm building an app

281
00:16:21,006 --> 00:16:24,555
what's the application definition
statement from that I get a list

282
00:16:25,149 --> 00:16:29,320
features that I think might fit in that
and then the all important step

283
00:16:29,032 --> 00:16:33,091
figuring out what to say no to she had
this long list

284
00:16:33,091 --> 00:16:36,510
then you run it through the filter of
what is my application about what's the

285
00:16:37,329 --> 00:16:40,790
first thing that I need to focus on
what's the most important thing that I

286
00:16:40,079 --> 00:16:41,107
want to focus on

287
00:16:42,007 --> 00:16:44,016
and so that's gonna allow us to drop
these last three entries and we're just

288
00:16:44,097 --> 00:16:46,406
going to focus on these first four
things

289
00:16:47,279 --> 00:16:50,600
for our application is going to work

290
00:16:50,006 --> 00:16:53,062
now let's go through and talk in a
little more detail about the application

291
00:16:54,016 --> 00:16:58,068
now we have a a sort of a picture on it
so here's a wireframe at the application

292
00:16:58,068 --> 00:17:02,337
we have a list updates from our friends

293
00:17:02,949 --> 00:17:06,120
they have avatars and then we have this
plus button on the top

294
00:17:06,012 --> 00:17:09,037
where we can add a new entry

295
00:17:09,037 --> 00:17:12,856
the first thing to do is to spend some
time conceptualizing what is our

296
00:17:13,189 --> 00:17:14,278
application look like

297
00:17:15,079 --> 00:17:18,820
through the lens the
model-view-controller design paradigm

298
00:17:18,082 --> 00:17:21,100
and the first thing I like to do is talk
about the model

299
00:17:22,000 --> 00:17:25,035
in I a really good sorted first

300
00:17:25,035 --> 00:17:28,074
cut approach at how to come up with what
is the model look like

301
00:17:28,074 --> 00:17:32,116
I think is to write down some user
stories or maybe if you've ever use

302
00:17:33,016 --> 00:17:34,155
irssi cards like

303
00:17:34,299 --> 00:17:38,323
the titles are those the list of things
that you know that the application

304
00:17:38,539 --> 00:17:42,360
is going to have to do and then pull the
nouns out so here we have a statement a

305
00:17:42,036 --> 00:17:44,090
user can specify avatar

306
00:17:44,009 --> 00:17:47,788
well that tells us user and avatar these
other statements

307
00:17:48,679 --> 00:17:52,110
a user can have an entry a user can
follow a friend

308
00:17:52,011 --> 00:17:56,820
so there's relationships between these
users all these items all the nouns out

309
00:17:56,919 --> 00:17:57,970
on this list

310
00:17:57,097 --> 00:18:02,101
tell us what the model objects are and
so from that we come up with this simple

311
00:18:03,037 --> 00:18:07,095
modelleri have Quakers have friends they
have avatars and they have a list

312
00:18:07,095 --> 00:18:10,110
going so that's the model

313
00:18:11,001 --> 00:18:14,098
next up is the view so how we're going
to display this since we're using you

314
00:18:15,007 --> 00:18:16,094
like it were on top of the IRS

315
00:18:16,094 --> 00:18:19,183
and we're gonna make a beautiful
application we're going to use

316
00:18:20,083 --> 00:18:23,083
a table view that table views

317
00:18:23,083 --> 00:18:26,091
arranged in a composite Corsi at the
table view at the top

318
00:18:27,063 --> 00:18:30,972
it has a list if table who sells the
stable you cells have a TextView

319
00:18:31,539 --> 00:18:36,760
Anna image you since they are arranged
in a composite whenever this

320
00:18:36,076 --> 00:18:39,091
tableview scrolls and I move its bounds

321
00:18:39,091 --> 00:18:42,120
I only have to move the table view
aren't you glad you don't have to

322
00:18:43,002 --> 00:18:44,076
iterate through all the table view cells

323
00:18:44,094 --> 00:18:47,182
in your tableview and move them by the
appropriate amount

324
00:18:48,082 --> 00:18:51,561
I do enough math without having to do
that

325
00:18:52,299 --> 00:18:55,500
alright so that's the view

326
00:18:55,005 --> 00:18:59,090
next up is the controller now remember
the controllers roellinger application

327
00:19:00,035 --> 00:19:02,035
is to shuffle the data between a model

328
00:19:02,035 --> 00:19:07,077
interview and then take state updates
and apply that back tomorrow

329
00:19:07,077 --> 00:19:10,094
so our view controller is going to act

330
00:19:10,094 --> 00:19:13,159
as the datasource for tableview

331
00:19:14,059 --> 00:19:18,398
wherever you like he will view it has
this dotted line or weak relationship to

332
00:19:18,929 --> 00:19:19,440
its

333
00:19:19,044 --> 00:19:23,122
you controller and that you control or
implements the datasource protocol

334
00:19:24,022 --> 00:19:26,116
sorry view controller is going to tell
the table view here's the number

335
00:19:27,016 --> 00:19:29,535
sections and here's the number rose

336
00:19:29,679 --> 00:19:36,679
based on interacting with the model

337
00:19:37,073 --> 00:19:40,077
our view controller will also be
activated

338
00:19:40,077 --> 00:19:43,113
will be told to do things by the user
interface

339
00:19:44,013 --> 00:19:47,048
and will use target action of course to
make that connection so when you tap on

340
00:19:47,048 --> 00:19:48,061
the plus button

341
00:19:48,061 --> 00:19:51,135
it says what's my target oh my target is
this object here which happens to be the

342
00:19:52,035 --> 00:19:53,104
quick view controller

343
00:19:53,419 --> 00:19:59,900
what message that I send oh that's the
add a new entry message

344
00:19:59,009 --> 00:20:02,091
our view controller is also responsible
for dealing with the networking stuff

345
00:20:03,072 --> 00:20:07,094
so the view controller has to manage the
networking it has to be able to get the

346
00:20:07,094 --> 00:20:08,137
data from the internet

347
00:20:09,037 --> 00:20:12,050
turn it into objects that we can display
on the screen

348
00:20:12,005 --> 00:20:16,046
we'll talk in more detail about that
shortly

349
00:20:16,091 --> 00:20:19,100
so that is the model

350
00:20:19,919 --> 00:20:25,943
view and controller for this initial
seen in our application

351
00:20:26,159 --> 00:20:30,360
we have our public time-line view
controller which axe as the data source

352
00:20:30,036 --> 00:20:33,595
for the table view and his able to get
information

353
00:20:33,919 --> 00:20:37,760
from the model and shuffle that into the
view

354
00:20:37,076 --> 00:20:41,083
by implementing that table view data
source protocol method

355
00:20:41,083 --> 00:20:45,097
the interview I'm sorry the table view
is a composite when we scroll it

356
00:20:45,097 --> 00:20:49,176
everything moves together as one

357
00:20:50,049 --> 00:20:53,100
the next piece that we talked about was

358
00:20:53,559 --> 00:20:56,890
adding a new entry so when user

359
00:20:56,089 --> 00:20:59,158
is adding a new entry we're gonna have a
new view controller

360
00:21:00,058 --> 00:21:03,063
and a new view because we have a
different way to present stuff

361
00:21:03,063 --> 00:21:07,076
but the model class the senate model
classes is going to be reused we're

362
00:21:07,076 --> 00:21:10,108
going to use the same classes to
represent that date

363
00:21:11,008 --> 00:21:14,012
so it's a different amount shuffling or
a different kind of shuffling right

364
00:21:14,012 --> 00:21:15,046
because we're shuffling data

365
00:21:15,046 --> 00:21:19,069
for a particular entry into the view and
of course the viewer to view does is

366
00:21:19,069 --> 00:21:20,074
different so there's different

367
00:21:21,019 --> 00:21:24,115
stuff for the controller to do the model
class ends up being the same so we're

368
00:21:25,015 --> 00:21:29,020
able to reuse that

369
00:21:29,002 --> 00:21:32,027
so the user taps on the bun

370
00:21:32,045 --> 00:21:35,524
that since the action message to its
target which is the public time I view

371
00:21:35,929 --> 00:21:36,830
controller

372
00:21:36,083 --> 00:21:39,149
we present to add a new entry

373
00:21:40,049 --> 00:21:44,095
and in these cancel and done buttons
would be connected via target action

374
00:21:44,095 --> 00:21:50,113
to the new entry view controller

375
00:21:51,013 --> 00:21:54,095
now this view controller also has to
interface with the network

376
00:21:54,095 --> 00:21:58,109
when user finishes insuring this new
entry in a tap Done button

377
00:21:59,009 --> 00:22:02,078
we need a package at this information
push it out to the Internet it's gonna

378
00:22:02,159 --> 00:22:02,530
live

379
00:22:02,053 --> 00:22:06,085
on some server somewhere there's a
potential smell going on there

380
00:22:06,085 --> 00:22:11,404
because now we have two controllers that
have to manage the same kinda stuff

381
00:22:12,169 --> 00:22:17,400
and that's probably not good we'll talk
more about it shortly

382
00:22:17,004 --> 00:22:20,065
last piece up taking our said are common
set of patterns and looking at the way

383
00:22:21,001 --> 00:22:23,070
they work in this application

384
00:22:23,007 --> 00:22:26,356
the UI application is of course can have
an app delegate for application and

385
00:22:27,049 --> 00:22:29,640
that's gonna handle things like state
restoration

386
00:22:29,064 --> 00:22:32,087
it's gonna happen there is gonna handle
background downloading and the

387
00:22:32,087 --> 00:22:34,175
application becoming active in going
into the background and so forth that

388
00:22:35,075 --> 00:22:35,624
whole

389
00:22:36,299 --> 00:22:39,330
stack of stuff

390
00:22:39,033 --> 00:22:44,242
so now we have this built and change
happens

391
00:22:44,539 --> 00:22:47,603
our users come up with new things that
they want to do our designers come to us

392
00:22:48,179 --> 00:22:52,640
and say hey can you change this and make
this thing do this other thing so forth

393
00:22:52,064 --> 00:22:55,070
so we have our initial table view
controller and

394
00:22:56,024 --> 00:22:59,573
our next to requirements that we want to
address it is to be able

395
00:22:59,789 --> 00:23:03,380
to send private messages so now

396
00:23:03,038 --> 00:23:06,051
we have our initial view controller

397
00:23:06,051 --> 00:23:09,830
which has this networking code in it

398
00:23:10,289 --> 00:23:13,710
what do you do about this new view
controller it also

399
00:23:13,071 --> 00:23:17,103
needs to have networking code in it

400
00:23:18,003 --> 00:23:21,632
this is really starting to be some
pretty smelly code great like we can't

401
00:23:21,659 --> 00:23:22,190
we don't wanna

402
00:23:22,019 --> 00:23:25,748
copy and paste this if we took the
understanding of how to download

403
00:23:25,919 --> 00:23:28,750
information from that initial view
controller we could have course

404
00:23:28,075 --> 00:23:31,124
copy and pasted into our new view
controller

405
00:23:31,799 --> 00:23:35,740
but then what happens over time if
something changes a URL changes or who

406
00:23:35,074 --> 00:23:37,150
knows what else the interface that thing
changes

407
00:23:38,005 --> 00:23:41,094
and we have copy and paste code now we
fix in one place it's not going to get

408
00:23:42,039 --> 00:23:43,087
updated in the other so

409
00:23:43,087 --> 00:23:46,153
bad idea so instead what we'll do

410
00:23:47,053 --> 00:23:50,061
is let's reef actor this and poll that
URL code

411
00:23:50,061 --> 00:23:57,061
out love the view controllers and put it
into a download service

412
00:23:57,062 --> 00:23:59,991
when we do that we factoring will start
off with their public time when you

413
00:24:00,549 --> 00:24:01,500
controller which

414
00:24:01,005 --> 00:24:04,094
probably had the debt networking code in
it to start with

415
00:24:05,039 --> 00:24:08,045
will pull all that from the view
controller

416
00:24:08,045 --> 00:24:13,127
into the download service

417
00:24:14,027 --> 00:24:17,064
so will call download on that object

418
00:24:17,064 --> 00:24:21,343
and when it's done it's gonna send back
a response

419
00:24:21,919 --> 00:24:25,010
now I put a solid line in here
specifically because I want to talk

420
00:24:25,001 --> 00:24:26,160
through the idea

421
00:24:26,169 --> 00:24:30,090
love making the hard relationship
between these two things

422
00:24:30,009 --> 00:24:33,348
the public timeline view controller has
to know the download service because

423
00:24:33,429 --> 00:24:35,850
it's going to be responsible for
creating it

424
00:24:35,085 --> 00:24:39,294
but if the download service also has a
hard relationship back to the public

425
00:24:40,059 --> 00:24:41,270
time when you controller

426
00:24:41,027 --> 00:24:44,028
then we're gonna have to add a property
that download service and it's going to

427
00:24:44,037 --> 00:24:46,133
have to have a relationship to his
public timeline view controller

428
00:24:47,033 --> 00:24:51,762
when we add a new view controller do we
add a new property like we don't want to

429
00:24:52,059 --> 00:24:53,350
go down that path

430
00:24:53,035 --> 00:24:57,047
so instead let's make that a weak
relationship

431
00:24:57,047 --> 00:25:03,356
NU's delegation so notice how we took
the idea delegation that we have

432
00:25:03,779 --> 00:25:08,782
in you like it and now we're applying
that to the code in our application

433
00:25:08,809 --> 00:25:13,600
we're gonna define a delegate protocol
for this download service to call back

434
00:25:13,006 --> 00:25:15,565
to our code so that we can customise

435
00:25:16,159 --> 00:25:19,160
what happens when that download service
does things

436
00:25:19,169 --> 00:25:22,450
like when it finishes downloading her or
are downloading

437
00:25:22,045 --> 00:25:25,110
Jason file and so forth

438
00:25:26,001 --> 00:25:29,001
now when we need to use this again

439
00:25:29,001 --> 00:25:32,950
to interface with the private message
view controller it implements that

440
00:25:33,049 --> 00:25:34,740
download service delegate

441
00:25:34,074 --> 00:25:37,863
in the download service doesn't have to
know anything about either of those

442
00:25:38,529 --> 00:25:39,110
types

443
00:25:39,011 --> 00:25:42,039
other than the fact that the implement
that

444
00:25:42,039 --> 00:25:49,039
protocol all right in with that much go
take a look at the demo

445
00:25:49,086 --> 00:25:51,164
all right when I started writing the
demo I sorta went off the deep end and

446
00:25:52,064 --> 00:25:52,097
i'd

447
00:25:52,097 --> 00:25:55,097
tried to build this whole application
those building a service and

448
00:25:55,097 --> 00:25:59,416
and I realized is just too much for us
to cover in the last 15

449
00:26:00,289 --> 00:26:03,353
minutes or so that we have left so
instead what I've done is made and

450
00:26:03,929 --> 00:26:05,450
vastly simplified

451
00:26:05,045 --> 00:26:12,045
idea this application when we run it for
you now talk through what it does

452
00:26:17,012 --> 00:26:20,076
so I started with the Master Detail

453
00:26:20,076 --> 00:26:23,139
template and Xcode which creates for you
a table view

454
00:26:24,039 --> 00:26:27,061
in that he will you when you tap on
items in their navigates to a detailed

455
00:26:27,061 --> 00:26:27,760
view controller

456
00:26:28,309 --> 00:26:31,700
I took out the detail view controller
just so we would have focus on this one

457
00:26:31,007 --> 00:26:32,226
view controller

458
00:26:32,919 --> 00:26:36,700
I added to refresh control so that when
you pull down

459
00:26:36,007 --> 00:26:41,011
it kicks off to refresh to download some
information in it logs in the background

460
00:26:42,001 --> 00:26:45,062
to let us know that it was successful in
downloading that information

461
00:26:45,071 --> 00:26:48,122
so in in a real application for sure
gonna be processing the chase on the

462
00:26:49,022 --> 00:26:53,033
comes back from that downloading doing
all sorts of fancy stuff but for demo

463
00:26:53,033 --> 00:26:56,119
we're gonna be simple and just have this
have this down that happen

464
00:26:57,019 --> 00:27:00,258
so let's look at the way the code works
over here

465
00:27:00,429 --> 00:27:05,350
briefly so here's our you controller and
notice

466
00:27:05,035 --> 00:27:09,107
its implementing all these delicate
protocols for the in issue RL stuff

467
00:27:10,007 --> 00:27:13,486
we want to move that from our view
controller

468
00:27:13,549 --> 00:27:16,900
over to this new object to download
service that we're gonna implement

469
00:27:16,009 --> 00:27:19,018
is we don't want are you our table view
controller

470
00:27:19,909 --> 00:27:22,922
to understand all these detail about how

471
00:27:23,039 --> 00:27:28,127
networking works wanna captured and one
place so we can reuse it

472
00:27:28,919 --> 00:27:33,250
so we're gonna go through all this code
here that does all that and just move it

473
00:27:33,025 --> 00:27:36,084
now I'm not gonna make you said and
watch me type all this stuff and copy

474
00:27:36,084 --> 00:27:39,100
and pasted in and have me mess it up and
have it not work

475
00:27:40,000 --> 00:27:43,039
so instead I have gunship get

476
00:27:43,039 --> 00:27:50,039
tags in here

477
00:27:53,076 --> 00:27:55,092
boss

478
00:27:55,092 --> 00:27:57,185
okay so our view controller now

479
00:27:58,085 --> 00:28:03,093
no longer has this a knowledge about the
URL session and how it works we removed

480
00:28:03,093 --> 00:28:03,169
all those

481
00:28:04,069 --> 00:28:09,104
and move them over to our download
service we also took all that code from

482
00:28:10,004 --> 00:28:11,031
in here that was

483
00:28:11,031 --> 00:28:14,049
interfacing with the network and moved
that

484
00:28:14,049 --> 00:28:21,049
over to our download service

485
00:28:23,088 --> 00:28:25,156
and that's the URL that were using to
download and so forth

486
00:28:26,056 --> 00:28:30,148
so our view controller did have all this
knowledge

487
00:28:31,048 --> 00:28:35,144
and we've moved it over into our
download service now the download

488
00:28:36,044 --> 00:28:37,103
service has all the information

489
00:28:38,003 --> 00:28:41,074
our download service though

490
00:28:41,074 --> 00:28:45,080
doesn't have any API on it yet so we
haven't made it so that we can actually

491
00:28:45,008 --> 00:28:46,009
interface with it

492
00:28:46,081 --> 00:28:49,119
our view controller still has to manage

493
00:28:50,019 --> 00:28:53,093
making the network all right we don't
want to download service just going

494
00:28:53,093 --> 00:28:56,169
rogue and downloading stuff whenever it
feels like it the view controller being

495
00:28:57,069 --> 00:28:58,070
in control

496
00:28:58,007 --> 00:29:01,015
how things happen with the user taking
the user's

497
00:29:01,078 --> 00:29:05,160
input from the screen and turning that
into stuff that happens on the back end

498
00:29:06,006 --> 00:29:09,065
we want the view controller to be in
charge of making that happen

499
00:29:10,019 --> 00:29:13,048
so we need to add a couple message to
our download service

500
00:29:13,048 --> 00:29:17,122
to allow it to first do the connection
creating this URL session

501
00:29:18,022 --> 00:29:21,086
all the configuration stuff that goes
along with that and then we also want a

502
00:29:21,086 --> 00:29:23,092
method to start that to kick it off

503
00:29:23,092 --> 00:29:29,145
so we'll do another magic switch you
change it all

504
00:29:30,045 --> 00:29:37,045
and/or download service now has these
two methods

505
00:29:37,048 --> 00:29:44,048
connect and start in the connect method
were creating an S

506
00:29:45,068 --> 00:29:49,105
a URL session configuration stuff and
then in the start method we create a

507
00:29:50,005 --> 00:29:52,011
down note asking tell that to start

508
00:29:52,011 --> 00:29:55,012
former master view controller

509
00:29:55,012 --> 00:29:59,068
we are still kicking off

510
00:29:59,068 --> 00:30:02,147
the download from our re fresh control

511
00:30:03,047 --> 00:30:06,109
and of course that refresh control uses
target action

512
00:30:07,009 --> 00:30:10,009
in order to make the connection between
the control

513
00:30:10,009 --> 00:30:14,083
and our custom code but we've greatly
simplified what's happening in our view

514
00:30:14,083 --> 00:30:16,112
controller instead having any knowledge
about

515
00:30:17,012 --> 00:30:20,053
this networking it only has knowledge
about

516
00:30:20,053 --> 00:30:23,114
kicking it off about starting in about
making it happen

517
00:30:24,014 --> 00:30:28,040
alright so now

518
00:30:28,004 --> 00:30:35,004
we can run the application again

519
00:30:40,053 --> 00:30:44,085
and when we pull down notice here is
telling us in the log that it finished

520
00:30:44,085 --> 00:30:47,102
but I really fresh item hasn't stopped

521
00:30:48,002 --> 00:30:51,661
so the issue what's going on

522
00:30:51,679 --> 00:30:55,620
is our downloader now has all the
knowledge about what's going on with the

523
00:30:55,062 --> 00:30:55,139
downward

524
00:30:56,039 --> 00:31:00,578
but no one is informing the controller
that that happened that it's finished

525
00:31:00,929 --> 00:31:04,450
and so it finishes just fine but I
refresh

526
00:31:04,045 --> 00:31:07,129
isn't able to stop because our view
controller doesn't know that the

527
00:31:08,029 --> 00:31:09,044
download is finished

528
00:31:09,044 --> 00:31:12,088
if only we knew away to customize

529
00:31:12,088 --> 00:31:18,007
the behaviour reusable class of course
we do right will use delegation to make

530
00:31:18,799 --> 00:31:19,500
that happen

531
00:31:19,005 --> 00:31:23,028
so now we need to do is we need to
create a delegate protocol

532
00:31:23,073 --> 00:31:26,125
we need to create a property on our
downloader

533
00:31:27,025 --> 00:31:31,078
to have a delegate property and make
that delegate property

534
00:31:31,078 --> 00:31:38,078
implement that protocol

535
00:31:52,002 --> 00:31:55,051
sore download service has this method

536
00:31:55,051 --> 00:31:59,064
spelled out in the in the delegate that
says

537
00:31:59,064 --> 00:32:04,092
hey the download service did finish
downloading this URL

538
00:32:04,092 --> 00:32:08,115
which is the original URL that was asked
for it downloaded it

539
00:32:09,015 --> 00:32:12,052
to a particular URL in that last
argument

540
00:32:12,052 --> 00:32:16,109
is an error saying everything is fine if
we turn if we pass until their

541
00:32:17,009 --> 00:32:20,070
or hate something went wrong in this is
what happened

542
00:32:20,007 --> 00:32:23,072
now we're gonna build a more
sophisticated

543
00:32:24,035 --> 00:32:28,052
networking stack here what we want to do
is provide many more

544
00:32:28,052 --> 00:32:31,147
delegation points many more places for
customization things like

545
00:32:32,047 --> 00:32:36,081
hey I need some authentication
information other things like that or

546
00:32:36,081 --> 00:32:40,128
I have finished downloading 10 bites at
the 100 bytes I'm gonna download so that

547
00:32:41,028 --> 00:32:42,032
you could update the spinner

548
00:32:42,068 --> 00:32:47,093
appropriately from the view controller
but we'll just leave it at this for

549
00:32:47,093 --> 00:32:47,152
right now

550
00:32:48,052 --> 00:32:52,106
and then in our download service

551
00:32:53,006 --> 00:32:59,008
really important piece to the puzzle

552
00:32:59,026 --> 00:33:03,093
is when the URL session finishes
downloading

553
00:33:03,093 --> 00:33:06,136
when the the a you know we kick off the
the

554
00:33:07,036 --> 00:33:10,061
download when it finishes it's going to
call back the

555
00:33:10,061 --> 00:33:14,093
in this URL down the task is gonna call
back and say hand-finished

556
00:33:14,093 --> 00:33:17,189
we need to make sure and tell our
delegate that that happened

557
00:33:18,089 --> 00:33:21,160
so that call back

558
00:33:22,006 --> 00:33:26,037
goes from our download session to the
view controller

559
00:33:26,091 --> 00:33:30,098
which is then going to use that
knowledge that the download has finished

560
00:33:30,098 --> 00:33:34,173
to

561
00:33:35,073 --> 00:33:40,079
and refreshing we also put

562
00:33:40,079 --> 00:33:43,138
the responsibility love what to do with
that document

563
00:33:44,038 --> 00:33:49,089
into the view controller so if you
notice appear

564
00:33:49,089 --> 00:33:52,132
further up we're doing some file moving
around taking the final movie and so

565
00:33:53,032 --> 00:33:53,074
forth

566
00:33:53,074 --> 00:33:56,120
in a real application this is another
place where I would create

567
00:33:57,002 --> 00:34:00,069
another service probably something like
a chase on parser

568
00:34:00,087 --> 00:34:04,130
and I would take that Jason parser and
say hey here's the stuff that just got

569
00:34:05,003 --> 00:34:05,011
downloaded

570
00:34:06,001 --> 00:34:10,074
would you please take care love parsing
it in turning into real objects

571
00:34:10,083 --> 00:34:13,652
create another delegate protocol for the
Jason parser

572
00:34:14,399 --> 00:34:17,830
energies on parser would call me back
and say hey everything is finished

573
00:34:17,083 --> 00:34:17,151
parsing

574
00:34:18,051 --> 00:34:20,104
and then that's what I want action
that's when I would actually have all

575
00:34:21,004 --> 00:34:22,363
the information I need

576
00:34:22,399 --> 00:34:29,399
to change the way the user interface
looks one other thing

577
00:34:29,078 --> 00:34:32,447
that I that I always like to talk
through with with developers

578
00:34:33,149 --> 00:34:37,440
is we have stepped over the boundary
where we

579
00:34:37,044 --> 00:34:41,053
understand and can start thinking about
how you like it and foundation

580
00:34:42,034 --> 00:34:46,037
are implemented so let's take a step
back and take a look at our download

581
00:34:46,064 --> 00:34:46,127
service

582
00:34:47,027 --> 00:34:51,100
so the download service

583
00:34:52,000 --> 00:34:55,679
specifies that it implements this set of
protocols

584
00:34:55,679 --> 00:34:59,050
every one of those protocols names

585
00:34:59,005 --> 00:35:04,102
ins indelicate the responsibility of
anything that is a delegate is to

586
00:35:05,002 --> 00:35:06,083
customize the behavior

587
00:35:06,083 --> 00:35:10,096
up the object for which it is the deli
in rain so

588
00:35:10,096 --> 00:35:13,105
what we are doing is specifying that we
are able to fulfil that role

589
00:35:14,086 --> 00:35:17,115
now in the code I don't have to go show
it to you because there's so much code

590
00:35:18,015 --> 00:35:19,026
there but in the code

591
00:35:19,026 --> 00:35:22,044
I am be kind making this download
service the delegate

592
00:35:22,044 --> 00:35:25,103
above the download task in Eunice URL
session

593
00:35:26,003 --> 00:35:29,070
so imagine with me if you will what the
code looks like

594
00:35:29,007 --> 00:35:36,007
in in this URL session or in in as
download task there's got to be a chance

595
00:35:37,027 --> 00:35:38,095
to code in there somewhere

596
00:35:38,095 --> 00:35:43,102
that does something very similar to this
I hope that helps

597
00:35:44,002 --> 00:35:47,066
you think through like how does the
puzzle fit together how does all this

598
00:35:47,066 --> 00:35:47,123
work

599
00:35:48,023 --> 00:35:51,060
we do the same things that I'm asking
you to do

600
00:35:51,006 --> 00:35:54,091
we define a protocol that says he hears
the customization

601
00:35:55,045 --> 00:35:59,086
past years the customization points the
you have for this reusable object

602
00:35:59,086 --> 00:36:03,098
if you implement this method I will call
it

603
00:36:03,098 --> 00:36:07,100
at a particular time now you're building
that for your own application

604
00:36:08,018 --> 00:36:11,021
your defining this download service deli
protocol

605
00:36:11,021 --> 00:36:14,037
and it has a single method in it right
now that says

606
00:36:14,037 --> 00:36:17,090
hey I finished downloading this stuff to
this particular URL

607
00:36:17,009 --> 00:36:21,062
that would be a perfect place for us as
I said earlier to take that URL

608
00:36:22,043 --> 00:36:26,054
pass it off to a Jason parser but the
Jason purser crunch on it for a little

609
00:36:26,054 --> 00:36:27,126
while perhaps but the data

610
00:36:28,026 --> 00:36:31,125
through core data into a database
messages back and say yes all that

611
00:36:32,025 --> 00:36:33,087
information has been parsed

612
00:36:33,087 --> 00:36:36,088
and all that information is sitting in
your database and you're ready to update

613
00:36:36,088 --> 00:36:38,165
your table view

614
00:36:39,065 --> 00:36:42,156
okay so one last piece love

615
00:36:43,056 --> 00:36:46,084
stuff in the demo here that I'm not
particularly

616
00:36:46,084 --> 00:36:49,155
happy with

617
00:36:50,055 --> 00:36:56,128
well let me go ahead and run it again
just for funs we can see it stopping

618
00:36:57,028 --> 00:36:59,127
so now we're back to the functionality
that we had before we started hacking

619
00:37:00,027 --> 00:37:01,029
and slashing doing

620
00:37:01,047 --> 00:37:05,130
surgery on her application alright so
one last like I said one last piece have

621
00:37:06,003 --> 00:37:09,008
stuff in here that are not particularly
happy with if we go appear in the

622
00:37:09,035 --> 00:37:10,057
download service

623
00:37:10,057 --> 00:37:13,066
and I glance over this earlier because I
didn't wanna

624
00:37:13,066 --> 00:37:16,144
confused where we were in the talk if we
go on the download service we see this

625
00:37:17,044 --> 00:37:18,115
thing recalling out

626
00:37:19,015 --> 00:37:22,100
to you I application shared application
giving your delegate

627
00:37:23,000 --> 00:37:26,057
in there were casting that to a class
that we know about and we had to import

628
00:37:26,057 --> 00:37:27,099
that header file

629
00:37:27,099 --> 00:37:30,178
so now we've made our download service
dependent

630
00:37:31,078 --> 00:37:34,125
honor application delegate that is

631
00:37:35,025 --> 00:37:38,108
that smelly cat you don't want to do
that because you're at Delhi it

632
00:37:39,008 --> 00:37:44,029
its responsibility is not providing
information to download services

633
00:37:44,029 --> 00:37:48,063
the application delegate is supposed to
be about maintaining the relationship

634
00:37:48,063 --> 00:37:49,150
between your application

635
00:37:50,005 --> 00:37:54,044
and the rest to the OS the methods on
there are things like

636
00:37:54,089 --> 00:37:57,136
I'm about to go in the background I came
back from the background

637
00:37:58,036 --> 00:38:01,115
that's the stuff that you should focus
on for your application delegate

638
00:38:02,015 --> 00:38:05,041
I see this pattern repeated in many
people's code

639
00:38:05,041 --> 00:38:08,060
and it's a really bad idea if you're
casting

640
00:38:08,006 --> 00:38:11,073
shared application application delegate
to your class and then you're sending

641
00:38:12,027 --> 00:38:13,032
your messages

642
00:38:13,032 --> 00:38:16,045
that's a bad idea so let's do a little
bit more

643
00:38:16,045 --> 00:38:23,045
cleanup to fix that up

644
00:38:27,032 --> 00:38:31,101
so a couple things that we did the first
part is

645
00:38:32,001 --> 00:38:36,084
adding an additional call back into our
delegate protocol

646
00:38:36,084 --> 00:38:40,135
so we added a new method download
service did finish with identifiers

647
00:38:41,035 --> 00:38:44,128
so that's gonna let the download
services delegate no

648
00:38:45,028 --> 00:38:48,051
that this download has finished

649
00:38:48,051 --> 00:38:51,082
that's related to this particular
identifiers

650
00:38:51,082 --> 00:38:56,143
and bring a call that in the same place
where we were

651
00:38:57,043 --> 00:39:04,043
calling out to the UI application
delegate then in our view controller

652
00:39:06,069 --> 00:39:09,078
in the implementation that additional
delegate method

653
00:39:10,059 --> 00:39:14,086
we're going to invoke that background
session completion handler

654
00:39:14,086 --> 00:39:17,154
not to go too far into the into the
details around there because it's not

655
00:39:18,054 --> 00:39:18,152
germane to

656
00:39:19,052 --> 00:39:22,137
talking about delegation but that's just
a call back that we tell the OS

657
00:39:23,037 --> 00:39:26,079
hey we're finished processing this
download and you can take a snapshot of

658
00:39:26,079 --> 00:39:26,168
the application

659
00:39:27,068 --> 00:39:30,151
I have a link to the talk on an issue
are all session from last year

660
00:39:31,051 --> 00:39:34,062
and there was also one this year that
has a lot more detail about how all that

661
00:39:34,062 --> 00:39:34,116
works

662
00:39:35,016 --> 00:39:39,094
now we have gotten rid of the dependence
from our download service

663
00:39:39,094 --> 00:39:43,140
to our application delegate so we no
longer have this sort of Marion if these

664
00:39:44,004 --> 00:39:44,096
ideas

665
00:39:45,032 --> 00:39:48,095
or placing too much responsibility on
the application Delhi

666
00:39:48,095 --> 00:39:51,113
the application delegate is responsible
for one thing

667
00:39:52,013 --> 00:39:55,017
keep it focused on that one thing and
don't start spreading it out

668
00:39:55,053 --> 00:39:58,112
throughout your whole application in
using it for many different things that

669
00:39:59,012 --> 00:39:59,074
do not

670
00:39:59,074 --> 00:40:04,128
included Center responsibilities so in
summary

671
00:40:05,028 --> 00:40:08,105
there are lots of remarks in iowa's

672
00:40:09,005 --> 00:40:13,092
but the cool thing is that once you
understand these common patterns that

673
00:40:13,092 --> 00:40:14,147
are used throughout all these frameworks

674
00:40:15,047 --> 00:40:18,116
delegation datasource target action
responder chain

675
00:40:19,016 --> 00:40:22,097
once you understand that in one place
you understand across

676
00:40:22,097 --> 00:40:25,152
the whole stack of remarks she to
leverage your learning

677
00:40:26,052 --> 00:40:29,113
understanding these patterns gives you
power to use

678
00:40:30,013 --> 00:40:34,064
all these frameworks in your application
and the next thing I want to say

679
00:40:34,064 --> 00:40:37,160
in terms of summary is just go for it
there

680
00:40:38,006 --> 00:40:41,034
I have talked to many other developers
who spend time

681
00:40:41,088 --> 00:40:44,095
like fretting about is this the new
controller is this thing a model is this

682
00:40:45,058 --> 00:40:45,124
thing %uh view

683
00:40:46,024 --> 00:40:49,050
just go for it build stuff go out there
and make

684
00:40:49,005 --> 00:40:52,051
amazing stuff you can always re factory
like we did here

685
00:40:52,096 --> 00:40:56,125
not quite live on stage but pretty close
you can always do that so just make

686
00:40:57,025 --> 00:40:57,090
stuff

687
00:40:57,009 --> 00:41:02,020
and you will learn so much from doing
that alright so for more information you

688
00:41:03,001 --> 00:41:04,054
can talk to my buddy Jake

689
00:41:04,054 --> 00:41:08,110
on there's also the Deaf forums here's a
link to those related sessions I was

690
00:41:09,001 --> 00:41:11,012
telling you about the talk this
afternoon

691
00:41:11,021 --> 00:41:14,023
on advanced I was application
architecture patterns has

692
00:41:14,041 --> 00:41:17,140
tons a fantastic stuff in it and it's
got a little bit think a little bit as I

693
00:41:18,004 --> 00:41:21,019
information about swift and some other
new patterns that we're gonna see emerge

694
00:41:21,055 --> 00:41:21,117
because I've

695
00:41:22,017 --> 00:41:25,053
the new language which I'm really
excited about and then here are two

696
00:41:25,053 --> 00:41:25,140
other talks

697
00:41:26,004 --> 00:41:29,055
from previous years that have more
information thank you very much for

698
00:41:29,091 --> 00:41:31,114
being here and I hope you have a great
rest your WBC

